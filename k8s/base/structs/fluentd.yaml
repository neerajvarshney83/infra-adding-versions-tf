apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: fluentd
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: fluentd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluentd
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-system
---
apiVersion: v1
data:
  disable.conf: ""
  fluent.conf: "# AUTOMATICALLY GENERATED\n# DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/fluent.conf.erb\n\n@include
    \"#{ENV['FLUENTD_SYSTEMD_CONF'] || 'systemd'}.conf\"\n@include \"#{ENV['FLUENTD_PROMETHEUS_CONF']
    || 'prometheus'}.conf\"\n@include kubernetes.conf\n@include conf.d/*.conf\n\n<match
    **>\n   @type elasticsearch\n   @id out_es\n   @log_level info\n   include_tag_key
    true\n   host \"#{ENV['FLUENT_ELASTICSEARCH_HOST']}\"\n   port \"#{ENV['FLUENT_ELASTICSEARCH_PORT']}\"\n
    \  path \"#{ENV['FLUENT_ELASTICSEARCH_PATH']}\"\n   scheme \"#{ENV['FLUENT_ELASTICSEARCH_SCHEME']
    || 'http'}\"\n   ssl_verify \"#{ENV['FLUENT_ELASTICSEARCH_SSL_VERIFY'] || 'true'}\"\n
    \  ssl_version \"#{ENV['FLUENT_ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}\"\n   ca_file
    \"#{ENV['FLUENT_ELASTICSEARCH_SSL_CA_FILE'] || ''}\"\n   user \"#{ENV['FLUENT_ELASTICSEARCH_USER']
    || use_default}\"\n   password \"#{ENV['FLUENT_ELASTICSEARCH_PASSWORD'] || use_default}\"\n
    \  reload_connections \"#{ENV['FLUENT_ELASTICSEARCH_RELOAD_CONNECTIONS'] || 'false'}\"\n
    \  reconnect_on_error \"#{ENV['FLUENT_ELASTICSEARCH_RECONNECT_ON_ERROR'] || 'true'}\"\n
    \  reload_on_failure \"#{ENV['FLUENT_ELASTICSEARCH_RELOAD_ON_FAILURE'] || 'true'}\"\n
    \  log_es_400_reason \"#{ENV['FLUENT_ELASTICSEARCH_LOG_ES_400_REASON'] || 'false'}\"\n
    \  logstash_prefix \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_PREFIX'] || 'logstash'}\"\n
    \  logstash_dateformat \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_DATEFORMAT'] ||
    '%Y.%m.%d'}\"\n   logstash_format \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_FORMAT']
    || 'false'}\"\n   index_name \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_INDEX_NAME']
    || 'logstash' }\"\n   include_timestamp \"#{ENV['FLUENT_ELASTICSEARCH_INCLUDE_TIMESTAMP']
    || 'true' }\" \n   index_separator \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_INDEX_SEPARATOR']
    || '-'}\"\n   index_date_pattern \"#{ENV['FLUENT_ELASTICSEARCH_LOGSTASH_INDEX_DATE_PATTERN']
    || 'now/d'}\"\n   template_name \"#{ENV['FLUENT_ELASTICSEARCH_TEMPLATE_NAME']
    || use_nil}\"\n   template_file \"#{ENV['FLUENT_ELASTICSEARCH_TEMPLATE_FILE']
    || use_nil}\"\n   template_overwrite \"#{ENV['FLUENT_ELASTICSEARCH_TEMPLATE_OVERWRITE']
    || use_default}\"\n   sniffer_class_name \"#{ENV['FLUENT_SNIFFER_CLASS_NAME']
    || 'Fluent::Plugin::ElasticsearchSimpleSniffer'}\"\n   request_timeout \"#{ENV['FLUENT_ELASTICSEARCH_REQUEST_TIMEOUT']
    || '5s'}\"\n   enable_ilm \"#{ENV['FLUENT_ELASTICSEARCH_ILM'] || 'false'}\"\n
    \  rollover_index \"#{ENV['FLUENT_ELASTICSEARCH_ROLLOVER_INDEX'] || 'false'}\"\n
    \  customize_template \"#{ENV['FLUENT_ELASTICSEARCH_CUSTOMIZE_TEMPLATE'] || {}
    }\"\n   ilm_policy_id \"#{ENV['FLUENT_ELASTICSEARCH_ILM_POLICY_ID'] || 'logstash-policy'}\"\n
    \  suppress_type_name \"#{ENV['FLUENT_ELASTICSEARCH_SUPPRESS_TYPES'] || 'true'
    }\"\n   ilm_policy \"#{ENV['FLUENT_ELASTICSEARCH_ILM_POLICY'] || {} }\"\n   ilm_policy_overwrite
    \"#{ENV['FLUENT_ELASTICSEARCH_ILM_POLICY_OVERWRITE'] || 'false'}\"\n\n   <buffer>\n
    \    @type memory\n     flush_thread_count \"#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_THREAD_COUNT']
    || '8'}\"\n     flush_interval \"#{ENV['FLUENT_ELASTICSEARCH_BUFFER_FLUSH_INTERVAL']
    || '5s'}\"\n     chunk_limit_size \"#{ENV['FLUENT_ELASTICSEARCH_BUFFER_CHUNK_LIMIT_SIZE']
    || '2M'}\"\n     queue_limit_length \"#{ENV['FLUENT_ELASTICSEARCH_BUFFER_QUEUE_LIMIT_LENGTH']
    || '32'}\"\n     retry_max_interval \"#{ENV['FLUENT_ELASTICSEARCH_BUFFER_RETRY_MAX_INTERVAL']
    || '30'}\"\n     retry_forever true\n   </buffer>\n</match>"
  kubernetes.conf: |-
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/kubernetes.conf.erb

    <label @FLUENT_LOG>
      <match fluent.**>
        @type null
      </match>
    </label>

    <source>
    @type tail
    @id in_tail_container_logs
    path /var/log/containers/*.log
    pos_file /var/log/fluentd-containers.log.pos
    tag "#{ENV['FLUENT_CONTAINER_TAIL_TAG'] || 'kubernetes.*'}"
    exclude_path "#{ENV['FLUENT_CONTAINER_TAIL_EXCLUDE_PATH'] || use_default}"
    read_from_head true
    <parse>
      @type "#{ENV['FLUENT_CONTAINER_TAIL_PARSER_TYPE'] || 'json'}"
      time_format %Y-%m-%dT%H:%M:%S.%NZ
    </parse>
    </source>

    <source>
      @type tail
      @id in_tail_minion
      path /var/log/salt/minion
      pos_file /var/log/fluentd-salt.pos
      tag salt
      <parse>
        @type regexp
        expression /^(?<time>[^ ]* [^ ,]*)[^\[]*\[[^\]]*\]\[(?<severity>[^ \]]*) *\] (?<message>.*)$/
        time_format %Y-%m-%d %H:%M:%S
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_startupscript
      path /var/log/startupscript.log
      pos_file /var/log/fluentd-startupscript.log.pos
      tag startupscript
      <parse>
        @type syslog
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_docker
      path /var/log/docker.log
      pos_file /var/log/fluentd-docker.log.pos
      tag docker
      <parse>
        @type regexp
        expression /^time="(?<time>[^)]*)" level=(?<severity>[^ ]*) msg="(?<message>[^"]*)"( err="(?<error>[^"]*)")?( statusCode=($<status_code>\d+))?/
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_etcd
      path /var/log/etcd.log
      pos_file /var/log/fluentd-etcd.log.pos
      tag etcd
      <parse>
        @type none
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_kubelet
      multiline_flush_interval 5s
      path /var/log/kubelet.log
      pos_file /var/log/fluentd-kubelet.log.pos
      tag kubelet
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_kube_proxy
      multiline_flush_interval 5s
      path /var/log/kube-proxy.log
      pos_file /var/log/fluentd-kube-proxy.log.pos
      tag kube-proxy
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_kube_apiserver
      multiline_flush_interval 5s
      path /var/log/kube-apiserver.log
      pos_file /var/log/fluentd-kube-apiserver.log.pos
      tag kube-apiserver
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_kube_controller_manager
      multiline_flush_interval 5s
      path /var/log/kube-controller-manager.log
      pos_file /var/log/fluentd-kube-controller-manager.log.pos
      tag kube-controller-manager
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_kube_scheduler
      multiline_flush_interval 5s
      path /var/log/kube-scheduler.log
      pos_file /var/log/fluentd-kube-scheduler.log.pos
      tag kube-scheduler
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_rescheduler
      multiline_flush_interval 5s
      path /var/log/rescheduler.log
      pos_file /var/log/fluentd-rescheduler.log.pos
      tag rescheduler
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_glbc
      multiline_flush_interval 5s
      path /var/log/glbc.log
      pos_file /var/log/fluentd-glbc.log.pos
      tag glbc
      <parse>
        @type kubernetes
      </parse>
    </source>

    <source>
      @type tail
      @id in_tail_cluster_autoscaler
      multiline_flush_interval 5s
      path /var/log/cluster-autoscaler.log
      pos_file /var/log/fluentd-cluster-autoscaler.log.pos
      tag cluster-autoscaler
      <parse>
        @type kubernetes
      </parse>
    </source>

    # Example:
    # 2017-02-09T00:15:57.992775796Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" ip="104.132.1.72" method="GET" user="kubecfg" as="<self>" asgroups="<lookup>" namespace="default" uri="/api/v1/namespaces/default/pods"
    # 2017-02-09T00:15:57.993528822Z AUDIT: id="90c73c7c-97d6-4b65-9461-f94606ff825f" response="200"
    <source>
      @type tail
      @id in_tail_kube_apiserver_audit
      multiline_flush_interval 5s
      path /var/log/kubernetes/kube-apiserver-audit.log
      pos_file /var/log/kube-apiserver-audit.log.pos
      tag kube-apiserver-audit
      <parse>
        @type multiline
        format_firstline /^\S+\s+AUDIT:/
        # Fields must be explicitly captured by name to be parsed into the record.
        # Fields may not always be present, and order may change, so this just looks
        # for a list of key="\"quoted\" value" pairs separated by spaces.
        # Unknown fields are ignored.
        # Note: We can't separate query/response lines as format1/format2 because
        #       they don't always come one after the other for a given query.
        format1 /^(?<time>\S+) AUDIT:(?: (?:id="(?<id>(?:[^"\\]|\\.)*)"|ip="(?<ip>(?:[^"\\]|\\.)*)"|method="(?<method>(?:[^"\\]|\\.)*)"|user="(?<user>(?:[^"\\]|\\.)*)"|groups="(?<groups>(?:[^"\\]|\\.)*)"|as="(?<as>(?:[^"\\]|\\.)*)"|asgroups="(?<asgroups>(?:[^"\\]|\\.)*)"|namespace="(?<namespace>(?:[^"\\]|\\.)*)"|uri="(?<uri>(?:[^"\\]|\\.)*)"|response="(?<response>(?:[^"\\]|\\.)*)"|\w+="(?:[^"\\]|\\.)*"))*/
        time_format %Y-%m-%dT%T.%L%Z
      </parse>
    </source>

    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      kubernetes_url "#{ENV['FLUENT_FILTER_KUBERNETES_URL'] || 'https://' + ENV.fetch('KUBERNETES_SERVICE_HOST') + ':' + ENV.fetch('KUBERNETES_SERVICE_PORT') + '/api'}"
      verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
      ca_file "#{ENV['KUBERNETES_CA_FILE']}"
      skip_labels "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_LABELS'] || 'false'}"
      skip_container_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_CONTAINER_METADATA'] || 'false'}"
      skip_master_url "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_MASTER_URL'] || 'false'}"
      skip_namespace_metadata "#{ENV['FLUENT_KUBERNETES_METADATA_SKIP_NAMESPACE_METADATA'] || 'false'}"
    </filter>
  logstash.template: |-
    {
      "index_patterns": ["logstash-*"],
      "settings": {
        "index.lifecycle.name": "logstash-policy",
        "index.lifecycle.rollover_alias": "logstash"
      },
      "template": {
        "mappings": {
          "_default_": {
            "properties": {
              "@timestamp": {
                "type": "date"
              },
              "statusCode": {
                "type": "long"
              },
            "level": {
                "type": "text"
              }
            }
          }
        }
      }
    }
  prometheus.conf: |-
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/prometheus.conf.erb

    # Prometheus metric exposed on 0.0.0.0:24231/metrics
    <source>
      @type prometheus
      bind "#{ENV['FLUENTD_PROMETHEUS_BIND'] || '0.0.0.0'}"
      port "#{ENV['FLUENTD_PROMETHEUS_PORT'] || '24231'}"
      metrics_path "#{ENV['FLUENTD_PROMETHEUS_PATH'] || '/metrics'}"
    </source>

    <source>
      @type prometheus_output_monitor
    </source>
  systemd.conf: |-
    # AUTOMATICALLY GENERATED
    # DO NOT EDIT THIS FILE DIRECTLY, USE /templates/conf/systemd.conf.erb

    # Logs from systemd-journal for interesting services.
    <source>
      @type systemd
      @id in_systemd_kubelet
      matches [{ "_SYSTEMD_UNIT": "kubelet.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/fluentd-journald-kubelet-cursor.json
      </storage>
      <entry>
        fields_strip_underscores true
      </entry>
      read_from_head true
      tag kubelet
    </source>

    # Logs from docker-systemd
    <source>
      @type systemd
      @id in_systemd_docker
      matches [{ "_SYSTEMD_UNIT": "docker.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/fluentd-journald-docker-cursor.json
      </storage>
      <entry>
        fields_strip_underscores true
      </entry>
      read_from_head true
      tag docker.systemd
    </source>

    # Logs from systemd-journal for interesting services.
    <source>
      @type systemd
      @id in_systemd_bootkube
      matches [{ "_SYSTEMD_UNIT": "bootkube.service" }]
      <storage>
        @type local
        persistent true
        path /var/log/fluentd-journald-bootkube-cursor.json
      </storage>
      <entry>
        fields_strip_underscores true
      </entry>
      read_from_head true
      tag bootkube
    </source>
kind: ConfigMap
metadata:
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
  name: fluentd-config
  namespace: kube-system
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    reloader.stakater.com/auto: "true"
  labels:
    k8s-app: fluentd-logging
    version: v1
  name: fluentd
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: fluentd-logging
      version: v1
  template:
    metadata:
      labels:
        k8s-app: fluentd-logging
        version: v1
    spec:
      containers:
      - env:
        - name: FLUENTD_OPTS
          value: --no-supervisor -q
        - name: FLUENT_ELASTICSEARCH_HOST
          value: elasticsearch-es-http.eck.svc
        - name: FLUENT_ELASTICSEARCH_PORT
          value: "9200"
        - name: FLUENT_ELASTICSEARCH_SCHEME
          value: https
        - name: FLUENT_ELASTICSEARCH_SSL_VERIFY
          value: "true"
        - name: FLUENT_ELASTICSEARCH_SSL_CA_FILE
          value: /fluentd/etc/elastic/ca.crt
        - name: FLUENT_ELASTICSEARCH_SSL_VERSION
          value: TLSv1_2
        - name: FLUENT_ELASTICSEARCH_USER
          value: elastic
        - name: FLUENT_ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              key: elastic
              name: elasticsearch-es-elastic-user
        - name: FLUENT_ELASTICSEARCH_ILM
          value: "true"
        - name: FLUENT_ELASTICSEARCH_ILM_POLICY_ID
          value: logstash-policy
        - name: FLUENT_ELASTICSEARCH_ILM_POLICY
          value: '{"policy":{"phases":{"hot":{"min_age":"0ms","actions":{"rollover":{"max_age":"1d","max_size":"5gb"},"set_priority":{"priority":10}}},"warm":{"actions":{"allocate":{"include":{},"exclude":{},"require":{"data":"warm"}},"set_priority":{"priority":20}}},"cold":{"min_age":"7d","actions":{"freeze":{},"set_priority":{"priority":30}}},"delete":{"min_age":"90d","actions":{"delete":{}}}}}} '
        - name: FLUENT_ELASTICSEARCH_ILM_POLICY_OVERWRITE
          value: "true"
        - name: FLUENT_ELASTICSEARCH_LOG_ES_400_REASON
          value: "true"
        - name: FLUENT_ELASTICSEARCH_TEMPLATE_NAME
          value: logstash-template
        - name: FLUENT_ELASTICSEARCH_TEMPLATE_FILE
          value: /fluentd/etc/logstash.template
        - name: FLUENT_ELASTICSEARCH_REQUEST_TIMEOUT
          value: 120s
        - name: FLUENT_ELASTICSEARCH_ROLLOVER_INDEX
          value: "true"
        - name: FLUENT_ELASTICSEARCH_CUSTOMIZE_TEMPLATE
          value: '{"<<index_prefix>>": "logstash"}'
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: fluent/fluentd-kubernetes-daemonset:v1.11.1-debian-elasticsearch7-1.1
        name: fluentd
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
          requests:
            cpu: 128m
            memory: 256Mi
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /fluentd/etc
          name: config-volume
        - mountPath: /fluentd/etc/elastic
          name: elastic-cert
          readOnly: true
      serviceAccount: fluentd
      serviceAccountName: fluentd
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      volumes:
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
      - configMap:
          name: fluentd-config
        name: config-volume
      - name: elastic-cert
        secret:
          secretName: elasticsearch-es-http-certs-public
