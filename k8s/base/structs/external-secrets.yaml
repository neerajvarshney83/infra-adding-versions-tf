apiVersion: v1
kind: Namespace
metadata:
  name: external-secrets
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    app.kubernetes.io/managed-by: helm
    helm.sh/hook: crd-install
  name: externalsecrets.kubernetes-client.io
spec:
  additionalPrinterColumns:
  - JSONPath: .status.lastSync
    name: Last Sync
    type: date
  - JSONPath: .status.status
    name: status
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: kubernetes-client.io
  names:
    kind: ExternalSecret
    plural: externalsecrets
    shortNames:
    - es
    singular: externalsecret
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          anyOf:
          - required:
            - data
          - required:
            - dataFrom
          oneOf:
          - properties:
              backendType:
                enum:
                - secretsManager
                - systemManager
          - properties:
              backendType:
                enum:
                - vault
            required:
            - vaultRole
            - vaultMountPoint
          - properties:
              backendType:
                enum:
                - azureKeyVault
            required:
            - keyVaultName
          - properties:
              backendType:
                enum:
                - gcpSecretsManager
          - properties:
              backendType:
                enum:
                - alicloudSecretsManager
          properties:
            backendType:
              enum:
              - secretsManager
              - systemManager
              - vault
              - azureKeyVault
              - gcpSecretsManager
              - alicloudSecretsManager
              type: string
            data:
              items:
                properties:
                  isBinary:
                    description: You must set this to true if configuring an item
                      for a binary file stored in Azure KeyVault. Azure automatically
                      base64 encodes binary files and setting this to true ensures
                      External Secrets does not base64 encode the base64 encoded binary
                      files.
                    type: boolean
                  key:
                    description: Secret key in backend
                    type: string
                  name:
                    description: Name set for this key in the generated secret
                    type: string
                  property:
                    description: Property to extract if secret in backend is a JSON
                      object
                required:
                - name
                - key
                type: object
              type: array
            dataFrom:
              items:
                type: string
              type: array
            key:
              type: string
            keyVaultName:
              type: string
            kvVersion:
              description: Vault K/V version either 1 or 2, default = 2
              maximum: 2
              minimum: 1
              type: integer
            roleArn:
              type: string
            template:
              description: Template which will be deep merged without mutating any
                existing fields. into generated secret, can be used to set for example
                annotations or type on the generated secret
              type: object
            vaultMountPoint:
              type: string
            vaultRole:
              type: string
          type: object
  version: v1
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets
  namespace: external-secrets
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - externalsecrets.kubernetes-client.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - update
- apiGroups:
  - kubernetes-client.io
  resources:
  - externalsecrets
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - kubernetes-client.io
  resources:
  - externalsecrets/status
  verbs:
  - get
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: platform-kubernetes-external-secrets
subjects:
- kind: ServiceAccount
  name: platform-kubernetes-external-secrets
  namespace: external-secrets
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets-auth
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: platform-kubernetes-external-secrets
  namespace: external-secrets
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets
  namespace: external-secrets
spec:
  ports:
  - name: prometheus
    port: 3001
    protocol: TCP
    targetPort: prometheus
  selector:
    app.kubernetes.io/name: kubernetes-external-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: platform
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kubernetes-external-secrets
    helm.sh/chart: kubernetes-external-secrets-5.1.0
  name: platform-kubernetes-external-secrets
  namespace: external-secrets
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: platform
      app.kubernetes.io/name: kubernetes-external-secrets
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: platform
        app.kubernetes.io/name: kubernetes-external-secrets
    spec:
      containers:
      - env:
        - name: AWS_DEFAULT_REGION
          value: us-west-2
        - name: AWS_REGION
          value: us-west-2
        - name: LOG_LEVEL
          value: info
        - name: LOG_MESSAGE_KEY
          value: msg
        - name: METRICS_PORT
          value: "3001"
        - name: POLLER_INTERVAL_MILLISECONDS
          value: "10000"
        - name: VAULT_ADDR
          value: http://127.0.0.1:8200
        image: godaddy/kubernetes-external-secrets:5.1.0
        imagePullPolicy: IfNotPresent
        name: kubernetes-external-secrets
        ports:
        - containerPort: 3001
          name: prometheus
        resources: {}
      securityContext:
        runAsNonRoot: true
      serviceAccountName: platform-kubernetes-external-secrets
