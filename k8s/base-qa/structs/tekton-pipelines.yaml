apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: clustertasks.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: ClusterTask
    plural: clustertasks
  preserveUnknownFields: false
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: clustertriggerbindings.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: ClusterTriggerBinding
    plural: clustertriggerbindings
    shortNames:
    - ctb
    singular: clustertriggerbinding
  scope: Cluster
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: conditions.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Condition
    plural: conditions
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: eventlisteners.triggers.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.address.url
    name: Address
    type: string
  - JSONPath: .status.conditions[?(@.type=='Available')].status
    name: Available
    type: string
  - JSONPath: .status.conditions[?(@.type=='Available')].reason
    name: Reason
    type: string
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: EventListener
    plural: eventlisteners
    shortNames:
    - el
    singular: eventlistener
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: extensions.dashboard.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.apiVersion
    name: API version
    type: string
  - JSONPath: .spec.name
    name: Kind
    type: string
  - JSONPath: .spec.displayname
    name: Display name
    type: string
  - JSONPath: .metadata.creationTimestamp
    name: Age
    type: date
  group: dashboard.tekton.dev
  names:
    categories:
    - tekton
    - tekton-dashboard
    kind: Extension
    plural: extensions
    shortNames:
    - ext
    - exts
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    knative.dev/crd-install: "true"
  name: images.caching.internal.knative.dev
spec:
  group: caching.internal.knative.dev
  names:
    categories:
    - knative-internal
    - caching
    kind: Image
    plural: images
    shortNames:
    - img
    singular: image
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: pipelineresources.tekton.dev
spec:
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: PipelineResource
    plural: pipelineresources
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: pipelineruns.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    name: Reason
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: PipelineRun
    plural: pipelineruns
    shortNames:
    - pr
    - prs
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: pipelines.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Pipeline
    plural: pipelines
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: runs.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    name: Reason
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Run
    plural: runs
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: taskruns.tekton.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].status
    name: Succeeded
    type: string
  - JSONPath: .status.conditions[?(@.type=="Succeeded")].reason
    name: Reason
    type: string
  - JSONPath: .status.startTime
    name: StartTime
    type: date
  - JSONPath: .status.completionTime
    name: CompletionTime
    type: date
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: TaskRun
    plural: taskruns
    shortNames:
    - tr
    - trs
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: tasks.tekton.dev
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      service:
        name: tekton-pipelines-webhook
        namespace: tekton-pipelines
  group: tekton.dev
  names:
    categories:
    - tekton
    - tekton-pipelines
    kind: Task
    plural: tasks
  preserveUnknownFields: false
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      x-kubernetes-preserve-unknown-fields: true
  versions:
  - name: v1alpha1
    served: true
    storage: false
  - name: v1beta1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: triggerbindings.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: TriggerBinding
    plural: triggerbindings
    shortNames:
    - tb
    singular: triggerbinding
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: triggers.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: Trigger
    plural: triggers
    shortNames:
    - tri
    singular: trigger
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: triggertemplates.triggers.tekton.dev
spec:
  group: triggers.tekton.dev
  names:
    categories:
    - tekton
    - tekton-triggers
    kind: TriggerTemplate
    plural: triggertemplates
    shortNames:
    - tt
    singular: triggertemplate
  scope: Namespaced
  subresources:
    status: {}
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-bot
  namespace: tekton-pipelines
secrets:
- name: git-ssh-key
- name: git-web-key
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleaner
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-admin
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-controller
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tekton-triggers-createwebhook
  namespace: tekton-pipelines
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  runAsUser:
    rule: MustRunAsNonRoot
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - emptyDir
  - configMap
  - secret
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers
spec:
  allowPrivilegeEscalation: false
  fsGroup:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  hostIPC: false
  hostNetwork: false
  hostPID: false
  privileged: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    ranges:
    - max: 65535
      min: 1
    rule: MustRunAs
  volumes:
  - emptyDir
  - configMap
  - secret
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cleaner
  namespace: tekton-pipelines
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - delete
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-artifact-bucket
  - config-artifact-pvc
  - feature-flags
  - config-leader-election
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - config-logging
  - config-observability
  - config-leader-election
  resources:
  - configmaps
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resourceNames:
  - webhook-certs
  resources:
  - secrets
  verbs:
  - get
  - update
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-triggers-admin
  namespace: tekton-pipelines
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - get
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  - pipelineresources
  verbs:
  - create
- apiGroups:
  - tekton.dev
  resources:
  - pipelineresources
  - pipelineruns
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-triggers-createwebhook
  namespace: tekton-pipelines
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  verbs:
  - get
  - list
  - create
  - update
  - delete
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - get
  - list
  - delete
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: tekton-aggregate-edit
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-aggregate-view
rules:
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-backend
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
- apiGroups:
  - security.openshift.io
  resources:
  - securitycontextconstraints
  verbs:
  - use
- apiGroups:
  - tekton.dev
  resources:
  - clustertasks
  - clustertasks/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dashboard.tekton.dev
  resources:
  - extensions
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - tekton.dev
  resources:
  - clustertasks
  - clustertasks/status
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  verbs:
  - create
  - update
  - delete
  - patch
  - add
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-dashboard
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
- apiGroups:
  - extensions
  - apps
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
---
aggregationRule:
  clusterRoleSelectors:
  - matchLabels:
      rbac.dashboard.tekton.dev/aggregate-to-dashboard: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-extensions
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-pipelines
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-tenant
rules:
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - dashboard.tekton.dev
  resources:
  - extensions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - pods/log
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  - tasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - taskruns/finalizers
  - pipelineruns/finalizers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  - taskruns/finalizers
  - pipelineruns/finalizers
  - tasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - create
  - update
  - delete
  - patch
  - add
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-triggers
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  - pods
  verbs:
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks
  - clustertasks
  - taskruns
  - pipelines
  - pipelineruns
  - pipelineresources
  - conditions
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/finalizers
  - pipelineruns/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - tasks/status
  - clustertasks/status
  - taskruns/status
  - pipelines/status
  - pipelineruns/status
  - pipelineresources/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  - secrets
  - events
  - serviceaccounts
  - configmaps
  - persistentvolumeclaims
  - limitranges
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - statefulsets
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-leader-election
rules:
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  - customresourcedefinitions/status
  verbs:
  - get
  - list
  - update
  - patch
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - webhook.pipeline.tekton.dev
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - validation.webhook.pipeline.tekton.dev
  - config.webhook.pipeline.tekton.dev
  resources:
  - validatingwebhookconfigurations
  verbs:
  - get
  - update
- apiGroups:
  - policy
  resourceNames:
  - tekton-pipelines
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-admin
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - secrets
  - services
  - events
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - eventlisteners
  - triggerbindings
  - triggertemplates
  - triggers
  - eventlisteners/finalizers
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings/status
  - eventlisteners/status
  - triggerbindings/status
  - triggertemplates/status
  - triggers/status
  verbs:
  - get
  - list
  - create
  - update
  - delete
  - patch
  - watch
- apiGroups:
  - policy
  resourceNames:
  - tekton-triggers
  resources:
  - podsecuritypolicies
  verbs:
  - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: tekton-triggers-aggregate-edit
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: tekton-triggers-aggregate-view
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - clustertriggerbindings
  - eventlisteners
  - triggerbindings
  - triggertemplates
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cleaner-to-cleaner
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cleaner
subjects:
- kind: ServiceAccount
  name: cleaner
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-dashboard
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-dashboard
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-pipelines
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-pipelines
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-triggers
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-triggers
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-triggers-admin-binding
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-admin
subjects:
- kind: ServiceAccount
  name: tekton-triggers-admin
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-triggers-createwebhook
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-triggers-createwebhook
subjects:
- kind: ServiceAccount
  name: tekton-triggers-createwebhook
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-controller
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-pipelines-webhook
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: build-bot
  namespace: tekton-pipelines
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: build-bot
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-backend
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-backend
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-extensions
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-extensions
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-dashboard
  name: tekton-dashboard-tenant
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-dashboard-tenant
subjects:
- kind: ServiceAccount
  name: tekton-dashboard
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-cluster-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-controller-cluster-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-leaderelection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-leader-election
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-controller-tenant-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-controller-tenant-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-cluster-access
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-webhook-cluster-access
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: tekton-pipelines-webhook-leaderelection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-pipelines-leader-election
subjects:
- kind: ServiceAccount
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: tekton-triggers-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-triggers-admin
subjects:
- kind: ServiceAccount
  name: tekton-triggers-controller
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-artifact-bucket
  namespace: tekton-pipelines
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-artifact-pvc
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # default-timeout-minutes contains the default number of
    # minutes to use for TaskRun and PipelineRun, if none is specified.
    default-timeout-minutes: "60"  # 60 minutes

    # default-service-account contains the default service account name
    # to use for TaskRun and PipelineRun, if none is specified.
    default-service-account: "default"

    # default-managed-by-label-value contains the default value given to the
    # "app.kubernetes.io/managed-by" label applied to all Pods created for
    # TaskRuns. If a user's requested TaskRun specifies another value for this
    # label, the user's request supercedes.
    default-managed-by-label-value: "tekton-pipelines"

    # default-pod-template contains the default pod template to use
    # TaskRun and PipelineRun, if none is specified. If a pod template
    # is specified, the default pod template is ignored.
    # default-pod-template:

    # default-cloud-events-sink contains the default CloudEvents sink to be
    # used for TaskRun and PipelineRun, when no sink is specified.
    # Note that right now it is still not possible to set a PipelineRun or
    # TaskRun specific sink, so the default is the only option available.
    # If no sink is specified, no CloudEvent is generated
    # default-cloud-events-sink:

    # default-task-run-workspace-binding contains the default workspace
    # configuration provided for any Workspaces that a Task declares
    # but that a TaskRun does not explicitly provide.
    # default-task-run-workspace-binding: |
    #   emptyDir: {}
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-defaults
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  leaseDuration: 15s
  renewDeadline: 10s
  resourceLock: leases
  retryPeriod: 2s
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-leader-election
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-logging
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.eventlistener: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "sampling": {
        "initial": 100,
        "thereafter": 100
      },
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: config-logging-triggers
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using Stackdriver will incur additional charges.
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the Stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used and metrics will be sent to the cluster's project if this field is
    # not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed
    # to send metrics to Stackdriver using "global" resource type and custom
    # metric type. Setting this flag to "true" could cause extra Stackdriver
    # charge.  If metrics.backend-destination is not Stackdriver, this is
    # ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: config-observability
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # This block is not actually functional configuration,
    # but serves to illustrate the available configuration
    # options and document them in a way that is accessible
    # to users that `kubectl edit` this config map.
    #
    # These sample configuration options may be copied out of
    # this example block and unindented to be in the data block
    # to actually change the configuration.

    # metrics.backend-destination field specifies the system metrics destination.
    # It supports either prometheus (the default) or stackdriver.
    # Note: Using stackdriver will incur additional charges
    metrics.backend-destination: prometheus

    # metrics.stackdriver-project-id field specifies the stackdriver project ID. This
    # field is optional. When running on GCE, application default credentials will be
    # used if this field is not provided.
    metrics.stackdriver-project-id: "<your stackdriver project id>"

    # metrics.allow-stackdriver-custom-metrics indicates whether it is allowed to send metrics to
    # Stackdriver using "global" resource type and custom metric type if the
    # metrics are not supported by "knative_revision" resource type. Setting this
    # flag to "true" could cause extra Stackdriver charge.
    # If metrics.backend-destination is not Stackdriver, this is ignored.
    metrics.allow-stackdriver-custom-metrics: "false"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
  name: config-observability-triggers
  namespace: tekton-pipelines
---
apiVersion: v1
data:
  disable-affinity-assistant: "false"
  disable-home-env-overwrite: "false"
  disable-working-directory-overwrite: "false"
  running-in-environment-with-injected-sidecars: "true"
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
  name: feature-flags
  namespace: tekton-pipelines
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
  name: triggers-webhook-certs
  namespace: tekton-pipelines
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
  name: webhook-certs
  namespace: tekton-pipelines
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/version: v0.9.0
    dashboard.tekton.dev/release: v0.9.0
    version: v0.9.0
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  ports:
  - name: http
    port: 9097
    protocol: TCP
    targetPort: 9097
  selector:
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/part-of: tekton-dashboard
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.16.2
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-pipelines-webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.16.2
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    targetPort: 9090
  - name: http-profiling
    port: 8008
    targetPort: 8008
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-triggers-controller
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.8.1
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: tekton-triggers-controller
  namespace: tekton-pipelines
spec:
  ports:
  - name: http-metrics
    port: 9090
    protocol: TCP
    targetPort: 9090
  selector:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tekton-triggers-webhook
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.8.1
    triggers.tekton.dev/release: v0.8.1
    version: v0.8.1
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
spec:
  ports:
  - name: https-webhook
    port: 443
    targetPort: 8443
  selector:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tekton-dashboard
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: dashboard
    app.kubernetes.io/part-of: tekton-dashboard
    app.kubernetes.io/version: v0.9.0
    dashboard.tekton.dev/release: v0.9.0
    version: v0.9.0
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: dashboard
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: dashboard
      app.kubernetes.io/part-of: tekton-dashboard
  template:
    metadata:
      labels:
        app: tekton-dashboard
        app.kubernetes.io/component: dashboard
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: dashboard
        app.kubernetes.io/part-of: tekton-dashboard
        app.kubernetes.io/version: v0.9.0
      name: tekton-dashboard
    spec:
      containers:
      - args:
        - --port=9097
        - --logout-url=
        - --pipelines-namespace=tekton-pipelines
        - --triggers-namespace=tekton-pipelines
        - --read-only=true
        - --csrf-secure-cookie=false
        - --log-level=info
        - --log-format=json
        - --namespace=tekton-pipelines
        - --openshift=false
        - --stream-logs=false
        - --external-logs=
        env:
        - name: INSTALLED_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: gcr.io/tekton-releases/github.com/tektoncd/dashboard/cmd/dashboard@sha256:0ba2c06bd7d6709bf45570e85152b2de0c659b7b6b1045c083754b293d4dab7f
        livenessProbe:
          httpGet:
            path: /health
            port: 9097
        name: tekton-dashboard
        ports:
        - containerPort: 9097
        readinessProbe:
          httpGet:
            path: /readiness
            port: 9097
      securityContext:
        runAsNonRoot: true
      serviceAccountName: tekton-dashboard
      volumes: []
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.16.2
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.16.2
        pipeline.tekton.dev/release: v0.16.2
        version: v0.16.2
    spec:
      containers:
      - args:
        - -kubeconfig-writer-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/kubeconfigwriter:v0.16.2@sha256:fd9385d5ce1ebbf8468612b1a6b94435620ab1ab5d15cbf6595c04bcea2e6465
        - -creds-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/creds-init:v0.16.2@sha256:1fac0b7540e82f24eb6fc2537812332fae76886cfc16a840775b519d55839a05
        - -git-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.16.2@sha256:ab6902b9ff24c838792668f246fe70aa6ca3767d72b258aacccb0c5914fc44bf
        - -entrypoint-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.16.2@sha256:b0cb4b5bf69c14848447757174dbff1fb3d6179fb1f5fb95804c199577d91118
        - -nop-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.16.2@sha256:61b616bbe4dbbfccb08b6584a4ed2ba41cd9794791683cfc2aad39314e551211
        - -imagedigest-exporter-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.16.2@sha256:c756458c29ef62cc1d660e6118057f2dae33926eefb6950b6a6a5455cdf35250
        - -pr-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.16.2@sha256:bc3b5aaf95214b3a552dad0c1609c120d45651e93c7140a163460ccef1f7fb0b
        - -build-gcs-fetcher-image
        - gcr.io/tekton-releases/github.com/tektoncd/pipeline/vendor/github.com/googlecloudplatform/cloud-builders/gcs-fetcher/cmd/gcs-fetcher:v0.16.2@sha256:6f71d0c53a6f29482dc6e7a86c93825264acfacfb687f4e1bb44e0929886f745
        - -gsutil-image
        - google/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
        - -shell-image
        - gcr.io/distroless/base@sha256:60f5ffe6fc481e9102747b043b3873a01893a5a8138f970c5f5fc06fb7494656
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_DEFAULTS_NAME
          value: config-defaults
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_ARTIFACT_BUCKET_NAME
          value: config-artifact-bucket
        - name: CONFIG_ARTIFACT_PVC_NAME
          value: config-artifact-pvc
        - name: CONFIG_FEATURE_FLAGS_NAME
          value: feature-flags
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.16.2@sha256:cebc178b884426eb52ccd27311871ac2b4c4f31076741d9efdbcfc1259126c46
        name: tekton-pipelines-controller
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1001
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: tekton-pipelines-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: v0.16.2
    pipeline.tekton.dev/release: v0.16.2
    version: v0.16.2
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: webhook
      app.kubernetes.io/part-of: tekton-pipelines
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: webhook
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: v0.16.2
        pipeline.tekton.dev/release: v0.16.2
        version: v0.16.2
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability
        - name: CONFIG_LEADERELECTION_NAME
          value: config-leader-election
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-pipelines-webhook
        - name: WEBHOOK_SECRET_NAME
          value: webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/pipeline
        image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.16.2@sha256:df7ca5966982f5fbe556df3b5a223f59474b497177864f067108fd44595f142b
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: https-webhook
          timeoutSeconds: 5
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 10
          tcpSocket:
            port: https-webhook
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1001
      serviceAccountName: tekton-pipelines-webhook
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: controller
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.8.1
    triggers.tekton.dev/release: v0.8.1
  name: tekton-triggers-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: controller
      app.kubernetes.io/part-of: tekton-triggers
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-triggers-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: controller
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/version: v0.8.1
        triggers.tekton.dev/release: v0.8.1
        version: v0.8.1
    spec:
      containers:
      - args:
        - -logtostderr
        - -stderrthreshold
        - INFO
        - -el-image
        - gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/eventlistenersink:v0.8.1@sha256:b4f5a91d431028eb297e9de6bb550341b4025006b40fbac4c854241e92e81a72
        - -el-port
        - "8080"
        - -period-seconds
        - "10"
        - -failure-threshold
        - "1"
        env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging-triggers
        - name: CONFIG_OBSERVABILITY_NAME
          value: config-observability-triggers
        - name: METRICS_DOMAIN
          value: tekton.dev/triggers
        image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/controller:v0.8.1@sha256:104993946c0b992f9dabea18453f97dd3cedc74fd1f81bb938f01454ec5aa914
        name: tekton-triggers-controller
      serviceAccountName: tekton-triggers-controller
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/name: webhook
    app.kubernetes.io/part-of: tekton-triggers
    app.kubernetes.io/version: v0.8.1
    triggers.tekton.dev/release: v0.8.1
  name: tekton-triggers-webhook
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: default
      app.kubernetes.io/name: webhook
      app.kubernetes.io/part-of: tekton-triggers
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
      labels:
        app: tekton-triggers-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: default
        app.kubernetes.io/name: webhook
        app.kubernetes.io/part-of: tekton-triggers
        app.kubernetes.io/version: v0.8.1
        triggers.tekton.dev/release: v0.8.1
        version: v0.8.1
    spec:
      containers:
      - env:
        - name: SYSTEM_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: CONFIG_LOGGING_NAME
          value: config-logging-triggers
        - name: WEBHOOK_SERVICE_NAME
          value: tekton-triggers-webhook
        - name: WEBHOOK_SECRET_NAME
          value: triggers-webhook-certs
        - name: METRICS_DOMAIN
          value: tekton.dev/triggers
        image: gcr.io/tekton-releases/github.com/tektoncd/triggers/cmd/webhook:v0.8.1@sha256:21fe6abb3b91b97028e13117c7dee9f8dd940d4ad85135cb7459fbc33227a84e
        name: webhook
        ports:
        - containerPort: 9090
          name: metrics
        - containerPort: 8008
          name: profiling
        - containerPort: 8443
          name: https-webhook
      serviceAccountName: tekton-triggers-controller
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: cleanup-pipelineruns
  namespace: tekton-pipelines
spec:
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/ash
            - -c
            - |
              TO_DELETE="$(kubectl get pipelinerun -n tekton-pipelines -o jsonpath='{range .items[?(@.status.completionTime)]}{.status.completionTime}{" "}{.metadata.name}{"\n"}{end}' | sort | head -n -${NUM_TO_KEEP} | awk '{ print $2}')"
              test -n "$TO_DELETE" && kubectl delete pipelinerun -n tekton-pipelines ${TO_DELETE} || true
            env:
            - name: NUM_TO_KEEP
              value: "10"
            image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
            name: kubectl
          restartPolicy: OnFailure
          serviceAccount: cleaner
  schedule: '*/15 * * * *'
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx-external
  name: infra-cd
  namespace: tekton-pipelines
spec:
  rules:
  - host: infra-updater.sandbox.11fs-structs.com
    http:
      paths:
      - backend:
          serviceName: el-infra-cd
          servicePort: 8080
        path: /
  tls:
  - hosts:
    - infra-updater.sandbox.11fs-structs.com
    secretName: infra-cd-tls
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx-external
    nginx.ingress.kubernetes.io/auth-signin: https://auth.sandbox.11fs-structs.com/oauth2/start?rd=https%3A%2F%2F$host$request_uri
    nginx.ingress.kubernetes.io/auth-url: https://auth.sandbox.11fs-structs.com/oauth2/auth
  name: tekton-dashboard
  namespace: tekton-pipelines
spec:
  rules:
  - host: tekton.sandbox.11fs-structs.com
    http:
      paths:
      - backend:
          serviceName: tekton-dashboard
          servicePort: 9097
  tls:
  - hosts:
    - tekton.sandbox.11fs-structs.com
    secretName: tekton-dashboard-tls
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: tekton-pipelines-controller
  name: tekton-pipelines
  namespace: tekton-pipelines
spec:
  endpoints:
  - interval: 10s
    port: http-metrics
  selector:
    matchLabels:
      app: tekton-pipelines-controller
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: tekton-triggers-controller
  name: tekton-triggers
  namespace: tekton-pipelines
spec:
  endpoints:
  - interval: 10s
    port: http-metrics
  selector:
    matchLabels:
      app: tekton-triggers-controller
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: kops-apply
  namespace: tekton-pipelines
spec:
  params:
  - default: kops/sandbox
    description: Path to the kops dir to apply relative to repo root
    name: kopsFile
    type: string
  - description: Git ref or tag to apply
    name: git-revision
    type: string
  steps:
  - args:
    - -c
    - kops get cluster -o yaml > kops-cluster-prev.yaml && kops replace cluster -f
      $(inputs.params.kopsFile) && kops update cluster; kops replace cluster -f kops-cluster-prev.yaml
    command:
    - /bin/ash
    envFrom:
    - secretRef:
        name: kops-secrets
    image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: kops-dry-run
    workingDir: $(workspaces.source.path)
  - args:
    - -c
    - kops export kubecfg --admin && kops replace cluster -f $(inputs.params.kopsFile)
      && kops update cluster --yes && kops rolling-update cluster --yes
    command:
    - /bin/ash
    envFrom:
    - secretRef:
        name: kops-secrets
    image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: kops-apply
    workingDir: $(workspaces.source.path)
  workspaces:
  - name: source
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: kustomize-apply
  namespace: tekton-pipelines
spec:
  params:
  - default: k8s/dev
    description: Path to the kustomize dir to apply relative to repo root
    name: kustomizeDir
    type: string
  - default: master
    description: Revision to be deployed
    name: git-revision
    type: string
  steps:
  - image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: k8s-dry-run
    script: |-
      #!/usr/bin/env ash
      set -e
      kustomize build $(inputs.params.kustomizeDir) | kubectl apply -f - --dry-run
    workingDir: $(workspaces.source.path)
  - image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: k8s-apply
    script: |-
      #!/usr/bin/env ash
      kustomize build $(inputs.params.kustomizeDir) | kubectl apply -f -
      echo "{\"kind\":\"ConfigMap\",\"apiVersion\":\"v1\",\"metadata\":{\"name\":\"infra-version\",\"namespace\":\"tekton-pipelines\"},\"data\":{\"version\":\"$(inputs.params.git-revision)\"}}" | kubectl apply -f -
    workingDir: $(workspaces.source.path)
  workspaces:
  - name: source
---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: terraform-apply
  namespace: tekton-pipelines
spec:
  params:
  - default: terraform/sandbox
    description: Path to the terraform dir to apply relative to repo root
    name: terraformDir
    type: string
  - description: Git ref or tag to apply
    name: git-revision
    type: string
  steps:
  - args:
    - -c
    - cd $(inputs.params.terraformDir) && terraform init && terraform validate &&
      tflint --module --loglevel=info && terraform plan
    command:
    - /bin/ash
    envFrom:
    - secretRef:
        name: terraform-secrets
    image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: tf-dry-run
    workingDir: $(workspaces.source.path)
  - args:
    - -c
    - cd $(inputs.params.terraformDir) && terraform init && terraform apply -auto-approve
    command:
    - /bin/ash
    envFrom:
    - secretRef:
        name: terraform-secrets
    image: 140554600707.dkr.ecr.eu-west-2.amazonaws.com/platform/infra-tester:latest
    name: tf-apply
    workingDir: $(workspaces.source.path)
  workspaces:
  - name: source
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: infra-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: k8s/sandbox
    description: The path to the kustomize dir we're applying, relative to repo root
    name: kustomizeDir
  - default: https://github.com/11fsconsulting/infra.git
    description: The path to the Github repository we should apply
    name: git-url
  - default: master
    description: The revision or tag to apply
    name: git-revision
  tasks:
  - name: fetch-from-git
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: git-source
  - name: apply-k8s
    params:
    - name: git-revision
      value: $(tasks.fetch-from-git.results.commit)
    - name: kustomizeDir
      value: $(params.kustomizeDir)
    runAfter:
    - fetch-from-git
    taskRef:
      kind: ClusterTask
      name: kustomize-apply
    workspaces:
    - name: source
      workspace: git-source
  workspaces:
  - name: git-source
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: kops-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: k8s/sandbox.yaml
    description: The path to the kops file we're applying, relative to repo root
    name: kopsFile
  - default: https://github.com/11fsconsulting/infra.git
    description: The path to the Github repository we should apply
    name: git-url
  - default: master
    description: The revision or tag to apply
    name: git-revision
  tasks:
  - name: fetch-from-git
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: git-source
  - name: apply-kops
    params:
    - name: kopsFile
      value: $(params.kopsFile)
    - name: git-revision
      value: $(tasks.fetch-from-git.results.commit)
    runAfter:
    - fetch-from-git
    taskRef:
      kind: ClusterTask
      name: kops-apply
    workspaces:
    - name: source
      workspace: git-source
  workspaces:
  - name: git-source
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: terraform-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: terraform/sandbox
    description: The path to the terraform dir we're applying, relative to repo root
    name: terraformDir
  - default: https://github.com/11fsconsulting/infra.git
    description: The path to the Github repository we should apply
    name: git-url
  - default: master
    description: The revision or tag to apply
    name: git-revision
  tasks:
  - name: fetch-from-git
    params:
    - name: url
      value: $(params.git-url)
    - name: revision
      value: $(params.git-revision)
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: git-source
  - name: apply-tf
    params:
    - name: terraformDir
      value: $(params.terraformDir)
    - name: git-revision
      value: $(tasks.fetch-from-git.results.commit)
    runAfter:
    - fetch-from-git
    taskRef:
      kind: ClusterTask
      name: terraform-apply
    workspaces:
    - name: source
      workspace: git-source
  workspaces:
  - name: git-source
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: create-webhook
  namespace: tekton-pipelines
spec:
  params:
  - description: The external domain for the EventListener e.g. `$(inputs.params.EventListenerName).<PROXYIP>.nip.io`
    name: ExternalDomain
  - description: The GitHub user
    name: GitHubUser
  - description: The GitHub repo where the webhook will be created
    name: GitHubRepo
  - description: The GitHub organization where the webhook will be created
    name: GitHubOrg
  - description: The Secret name for GitHub access token and string. Must contain
      keys 'access-token' and  'secret-string'
    name: GitHubSecretName
  - default: github.com
    description: The GitHub domain. Override for GitHub Enterprise
    name: GitHubDomain
  - default: '[\"push\"]'
    description: List of events the webhook will send notifications for
    name: WebhookEvents
  steps:
  - args:
    - -ce
    - |
      set -e
      echo "Create Webhook"
      if [ $(inputs.params.GitHubDomain) = "github.com" ];then
        curl -d "{\"name\": \"web\",\"active\": true,\"events\": $(inputs.params.WebhookEvents),\"config\": {\"url\": \"https://$(inputs.params.ExternalDomain)/\",\"content_type\": \"json\",\"insecure_ssl\": \"0\" ,\"secret\": \"$(cat /var/secret/secret-string)\"}}" -X POST -u $(inputs.params.GitHubUser):$(cat /var/secret/access-token) -L https://api.github.com/repos/$(inputs.params.GitHubOrg)/$(inputs.params.GitHubRepo)/hooks
      else
        curl -d "{\"name\": \"web\",\"active\": true,\"events\": $(inputs.params.WebhookEvents),\"config\": {\"url\": \"https://$(inputs.params.ExternalDomain)/\",\"content_type\": \"json\",\"insecure_ssl\": \"0\" ,\"secret\": \"$(cat /var/secret/secret-string)\"}}" -X POST -u $(inputs.params.GitHubUser):$(cat /var/secret/access-token) -L https://$(inputs.params.GitHubDomain)/api/v3/repos/$(inputs.params.GitHubOrg)/$(inputs.params.GitHubRepo)/hooks
      fi
    command:
    - sh
    image: pstauffer/curl:latest
    name: create-webhook
    volumeMounts:
    - mountPath: /var/secret
      name: github-secret
  volumes:
  - name: github-secret
    secret:
      secretName: $(inputs.params.GitHubSecretName)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  annotations:
    tekton.dev/displayName: git clone
    tekton.dev/pipelines.minVersion: 0.12.1
    tekton.dev/tags: git
  labels:
    app.kubernetes.io/version: "0.2"
  name: git-clone
  namespace: tekton-pipelines
spec:
  description: |-
    These Tasks are Git tasks to work with repositories used by other tasks in your Pipeline.
    The git-clone Task will clone a repo from the provided url into the output Workspace. By default the repo will be cloned into the root of your Workspace. You can clone into a subdirectory by setting this Task's subdirectory param.
  params:
  - description: git url to clone
    name: url
    type: string
  - default: ""
    description: git revision to checkout (branch, tag, sha, ref…)
    name: revision
    type: string
  - default: ""
    description: (optional) git refspec to fetch before checking out revision
    name: refspec
  - default: "true"
    description: defines if the resource should initialize and fetch the submodules
    name: submodules
    type: string
  - default: "1"
    description: performs a shallow clone where only the most recent commit(s) will
      be fetched
    name: depth
    type: string
  - default: "true"
    description: defines if http.sslVerify should be set to true or false in the global
      git config
    name: sslVerify
    type: string
  - default: ""
    description: subdirectory inside the "output" workspace to clone the git repo
      into
    name: subdirectory
    type: string
  - default: "true"
    description: clean out the contents of the repo's destination directory (if it
      already exists) before trying to clone the repo there
    name: deleteExisting
    type: string
  - default: ""
    description: git HTTP proxy server for non-SSL requests
    name: httpProxy
    type: string
  - default: ""
    description: git HTTPS proxy server for SSL requests
    name: httpsProxy
    type: string
  - default: ""
    description: git no proxy - opt out of proxying HTTP/HTTPS requests
    name: noProxy
    type: string
  - default: "true"
    description: log the commands used during execution
    name: verbose
    type: string
  results:
  - description: The precise commit SHA that was fetched by this Task
    name: commit
  - description: The precise URL that was fetched by this Task
    name: url
  steps:
  - image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.14.2
    name: clone
    script: |
      #!/bin/sh
      set -eu -o pipefail

      if [[ "$(params.verbose)" == "true" ]] ; then
        set -x
      fi

      CHECKOUT_DIR="$(workspaces.output.path)/$(params.subdirectory)"

      cleandir() {
        # Delete any existing contents of the repo directory if it exists.
        #
        # We don't just "rm -rf $CHECKOUT_DIR" because $CHECKOUT_DIR might be "/"
        # or the root of a mounted volume.
        if [[ -d "$CHECKOUT_DIR" ]] ; then
          # Delete non-hidden files and directories
          rm -rf "$CHECKOUT_DIR"/*
          # Delete files and directories starting with . but excluding ..
          rm -rf "$CHECKOUT_DIR"/.[!.]*
          # Delete files and directories starting with .. plus any other character
          rm -rf "$CHECKOUT_DIR"/..?*
        fi
      }

      if [[ "$(params.deleteExisting)" == "true" ]] ; then
        cleandir
      fi

      test -z "$(params.httpProxy)" || export HTTP_PROXY=$(params.httpProxy)
      test -z "$(params.httpsProxy)" || export HTTPS_PROXY=$(params.httpsProxy)
      test -z "$(params.noProxy)" || export NO_PROXY=$(params.noProxy)

      /ko-app/git-init \
        -url "$(params.url)" \
        -revision "$(params.revision)" \
        -refspec "$(params.refspec)" \
        -path "$CHECKOUT_DIR" \
        -sslVerify="$(params.sslVerify)" \
        -submodules="$(params.submodules)" \
        -depth "$(params.depth)"
      cd "$CHECKOUT_DIR"
      RESULT_SHA="$(git rev-parse HEAD)"
      EXIT_CODE="$?"
      if [ "$EXIT_CODE" != 0 ] ; then
        exit $EXIT_CODE
      fi
      # ensure we don't add a trailing newline to the result
      echo -n "$RESULT_SHA" > $(results.commit.path)
      echo -n "$(params.url)" > $(results.url.path)
  workspaces:
  - description: The git repo will be cloned onto the volume backing this workspace
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: TaskRun
metadata:
  name: infra-cd-webhook-run
  namespace: tekton-pipelines
spec:
  params:
  - name: GitHubOrg
    value: 11FSConsulting
  - name: GitHubUser
    value: 11fs-cicd
  - name: GitHubRepo
    value: infra
  - name: GitHubSecretName
    value: git-webhook
  - name: ExternalDomain
    value: infra-updater.sandbox.11fs-structs.com
  serviceAccountName: tekton-triggers-createwebhook
  taskRef:
    name: create-webhook
  timeout: 1000s
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: infra-cd
  namespace: tekton-pipelines
spec:
  serviceAccountName: tekton-triggers-admin
  triggers:
  - bindings:
    - kind: TriggerBinding
      ref: infra-cd
    interceptors:
    - github:
        eventTypes:
        - push
        secretRef:
          secretKey: secret-string
          secretName: git-webhook
    - cel:
        filter: |-
          (header.match('X-GitHub-Event', 'push') &&

           body.repository.name == 'infra') &&
           body.ref.startsWith('refs/heads/master')
    name: terraform-cd
    template:
      name: terraform-cd
  - bindings:
    - kind: TriggerBinding
      ref: infra-cd
    interceptors:
    - github:
        eventTypes:
        - push
        secretRef:
          secretKey: secret-string
          secretName: git-webhook
    - cel:
        filter: |-
          (header.match('X-GitHub-Event', 'push') &&

           body.repository.name == 'infra') &&
           body.ref.startsWith('refs/heads/master')
    name: kops-cd
    template:
      name: kops-cd
  - bindings:
    - kind: TriggerBinding
      ref: infra-cd
    interceptors:
    - github:
        eventTypes:
        - push
        secretRef:
          secretKey: secret-string
          secretName: git-webhook
    - cel:
        filter: |-
          (header.match('X-GitHub-Event', 'push') &&

           body.repository.name == 'infra') &&
           body.ref.startsWith('refs/heads/master')
    name: infra-cd
    template:
      name: infra-cd
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: infra-cd
  namespace: tekton-pipelines
spec:
  params:
  - name: git-url
    value: https://github.com/$(body.repository.full_name)
  - name: git-revision
    value: $(body.head_commit.id)
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: infra-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: master
    description: The git revision
    name: git-revision
  - description: The git repository url
    name: git-url
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: infra-cd-
    spec:
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      pipelineRef:
        name: infra-cd
      serviceAccountName: build-bot
      workspaces:
      - name: git-source
        volumeClaimTemplate:
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: kops-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: master
    description: The git revision
    name: git-revision
  - description: The git repository url
    name: git-url
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: kops-cd-
    spec:
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      pipelineRef:
        name: kops-cd
      serviceAccountName: build-bot
      workspaces:
      - name: git-source
        volumeClaimTemplate:
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: terraform-cd
  namespace: tekton-pipelines
spec:
  params:
  - default: master
    description: The git revision
    name: git-revision
  - description: The git repository url
    name: git-url
  resourcetemplates:
  - apiVersion: tekton.dev/v1beta1
    kind: PipelineRun
    metadata:
      generateName: terraform-cd-
    spec:
      params:
      - name: git-url
        value: $(tt.params.git-url)
      - name: git-revision
        value: $(tt.params.git-revision)
      pipelineRef:
        name: terraform-cd
      serviceAccountName: build-bot
      workspaces:
      - name: git-source
        volumeClaimTemplate:
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
  name: webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: webhook.pipeline.tekton.dev
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
  name: webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: webhook.triggers.tekton.dev
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
  name: config.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: config.webhook.pipeline.tekton.dev
  objectSelector:
    matchLabels:
      app.kubernetes.io/part-of: tekton-pipelines
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
  name: config.webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: config.webhook.triggers.tekton.dev
  namespaceSelector:
    matchExpressions:
    - key: triggers.tekton.dev/release
      operator: Exists
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    pipeline.tekton.dev/release: v0.16.2
  name: validation.webhook.pipeline.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-pipelines-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: validation.webhook.pipeline.tekton.dev
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: v0.8.1
  name: validation.webhook.triggers.tekton.dev
webhooks:
- admissionReviewVersions:
  - v1beta1
  clientConfig:
    service:
      name: tekton-triggers-webhook
      namespace: tekton-pipelines
  failurePolicy: Fail
  name: validation.webhook.triggers.tekton.dev
  sideEffects: None
