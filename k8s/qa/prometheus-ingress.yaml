---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: grafana
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx-internal
    nginx.ingress.kubernetes.io/auth-url: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
spec:
  tls:
  - hosts:
    - grafana.qa.us-east-1.dev.gen6bk.com
    secretName: grafana-tls
  rules:
  - host: grafana.qa.us-east-1.dev.gen6bk.com
    http:
      paths:
      - path: /avatar/
        backend:
          serviceName: does-not-exist
          servicePort: 80
      - path: /
        backend:
          serviceName: grafana
          servicePort: 3000
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: grafana
  namespace: monitoring
  labels:
    internal: "true"
spec:
  secretName: grafana-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: grafana.qa.us-east-1.dev.gen6bk.com
  dnsNames:
    - grafana.qa.us-east-1.dev.gen6bk.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: prometheus
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx-internal
    nginx.ingress.kubernetes.io/auth-url: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
spec:
  tls:
  - hosts:
    - prometheus.qa.us-east-1.dev.gen6bk.com
    secretName: prometheus-tls
  rules:
  - host: prometheus.qa.us-east-1.dev.gen6bk.com
    http:
      paths:
      - path: /
        backend:
          serviceName: prometheus-k8s
          servicePort: 9090
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    internal: "true"
spec:
  secretName: prometheus-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: prometheus.qa.us-east-1.dev.gen6bk.com
  dnsNames:
    - prometheus.qa.us-east-1.dev.gen6bk.com
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: alertmanager
  namespace: monitoring
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    kubernetes.io/ingress.class: nginx-internal
    nginx.ingress.kubernetes.io/auth-url: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.qa.us-east-1.dev.gen6bk.com/oauth2/start?rd=https%3A%2F%2F$host$request_uri"
spec:
  tls:
  - hosts:
    - alertmanager.qa.us-east-1.dev.gen6bk.com
    secretName: alertmanager-tls
  rules:
  - host: alertmanager.qa.us-east-1.dev.gen6bk.com
    http:
      paths:
      - path: /
        backend:
          serviceName: alertmanager-main
          servicePort: 9093
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: alertmanager
  namespace: monitoring
  labels:
    internal: "true"
spec:
  secretName: alertmanager-tls
  issuerRef:
    name: letsencrypt-prod
    kind: ClusterIssuer
  commonName: alertmanager.qa.us-east-1.dev.gen6bk.com
  dnsNames:
    - alertmanager.qa.us-east-1.dev.gen6bk.com
