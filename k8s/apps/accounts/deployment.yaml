---
apiVersion:  apps/v1
kind: Deployment
metadata:
  name: mino-accounts
  labels:
    app: mino-accounts
    db: "mino"
    auth: "okta"
  annotations:
    secret.reloader.stakater.com/reload: "milli-server-tls,rds-cert,mino-accounts-marqeta-password,mino-db-accounts-user,mino-accounts-plaid-api,mino-accounts-client-credentials-secret,mino-test-capabilities-api-password"
    configmap.reloader.stakater.com/reload: "mino-accounts-env-vars"
spec:
  progressDeadlineSeconds: 140
  selector:
    matchLabels:
      app: mino-accounts
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: mino-accounts
        db: "mino"
        auth: "okta"
    spec:
      containers:
        - image: 850315125037.dkr.ecr.us-east-1.amazonaws.com/mino-accounts:latest
          name: mino-accounts
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: mino-accounts-env-vars
          env:
            - name: MARQETA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-marqeta-password
                  key: password
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mino-db-accounts-user
                  key: PASSWORD
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: mino-db-accounts-user
                  key: ROLE
            - name: PLAID_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-plaid-api
                  key: client-id
            - name: PLAID_SECRET
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-plaid-api
                  key: secret
            - name: PLAID_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-plaid-api
                  key: public-key
            - name: CLIENT_CREDENTIALS_DOMAIN
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-client-credentials-secret
                  key: domain
            - name: CLIENT_CREDENTIALS_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-client-credentials-secret
                  key: client-id
            - name: CLIENT_CREDENTIALS_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-client-credentials-secret
                  key: client-secret
            - name: CLIENT_CREDENTIALS_AUDIENCE
              valueFrom:
                secretKeyRef:
                  name: mino-accounts-client-credentials-secret
                  key: audience
          ports:
            - containerPort: 8443
              name: https
          livenessProbe:
            httpGet:
              port: 8081
              path: /actuator/health
            initialDelaySeconds: 90
            periodSeconds: 10
          readinessProbe:
            httpGet:
              port: 8081
              path: /actuator/health
            initialDelaySeconds: 90
            periodSeconds: 5
          resources:
            requests:
              cpu: "500m"
              memory: "768Mi"
            limits:
              cpu: "1000m"
              memory: "1024Mi"
