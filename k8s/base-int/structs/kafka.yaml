apiVersion: v1
kind: Namespace
metadata:
  name: kafka
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkabridges.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of Kafka Bridge replicas
    name: Desired replicas
    type: integer
  - JSONPath: .spec.bootstrapServers
    description: The boostrap servers
    name: Bootstrap Servers
    priority: 1
    type: string
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaBridge
    listKind: KafkaBridgeList
    plural: kafkabridges
    shortNames:
    - kb
    singular: kafkabridge
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka Bridge.
          properties:
            authentication:
              description: Authentication configuration for connecting to the cluster.
              properties:
                accessToken:
                  description: Link to Kubernetes Secret containing the access token
                    which was obtained from the authorization server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                accessTokenIsJwt:
                  description: Configure whether access token should be treated as
                    JWT. This should be set to `false` if the authorization server
                    returns opaque tokens. Defaults to `true`.
                  type: boolean
                certificateAndKey:
                  description: Reference to the `Secret` which holds the certificate
                    and private key pair.
                  properties:
                    certificate:
                      description: The name of the file certificate in the Secret.
                      type: string
                    key:
                      description: The name of the private key in the Secret.
                      type: string
                    secretName:
                      description: The name of the Secret containing the certificate.
                      type: string
                  required:
                  - certificate
                  - key
                  - secretName
                  type: object
                clientId:
                  description: OAuth Client ID which the Kafka client can use to authenticate
                    against the OAuth server and use the token endpoint URI.
                  type: string
                clientSecret:
                  description: Link to Kubernetes Secret containing the OAuth client
                    secret which the Kafka client can use to authenticate against
                    the OAuth server and use the token endpoint URI.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                disableTlsHostnameVerification:
                  description: Enable or disable TLS hostname verification. Default
                    value is `false`.
                  type: boolean
                maxTokenExpirySeconds:
                  description: Set or limit time-to-live of the access tokens to the
                    specified number of seconds. This should be set if the authorization
                    server returns opaque tokens.
                  type: integer
                passwordSecret:
                  description: Reference to the `Secret` which holds the password.
                  properties:
                    password:
                      description: The name of the key in the Secret under which the
                        password is stored.
                      type: string
                    secretName:
                      description: The name of the Secret containing the password.
                      type: string
                  required:
                  - password
                  - secretName
                  type: object
                refreshToken:
                  description: Link to Kubernetes Secret containing the refresh token
                    which can be used to obtain access token from the authorization
                    server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                scope:
                  description: OAuth scope to use when authenticating against the
                    authorization server. Some authorization servers require this
                    to be set. The possible values depend on how authorization server
                    is configured. By default `scope` is not specified when doing
                    the token endpoint request.
                  type: string
                tlsTrustedCertificates:
                  description: Trusted certificates for TLS connection to the OAuth
                    server.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
                tokenEndpointUri:
                  description: Authorization server token endpoint URI.
                  type: string
                type:
                  description: Authentication type. Currently the only supported types
                    are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type
                    uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL
                    PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication.
                    The `tls` type uses TLS Client Authentication. The `tls` type
                    is supported only over TLS connections.
                  enum:
                  - tls
                  - scram-sha-512
                  - plain
                  - oauth
                  type: string
                username:
                  description: Username used for the authentication.
                  type: string
              required:
              - type
              type: object
            bootstrapServers:
              description: A list of host:port pairs for establishing the initial
                connection to the Kafka cluster.
              type: string
            consumer:
              description: Kafka consumer related configuration.
              properties:
                config:
                  description: 'The Kafka consumer configuration used for consumer
                    instances created by the bridge. Properties with the following
                    prefixes cannot be set: ssl., bootstrap.servers, group.id, sasl.,
                    security. (with the exception of: ssl.endpoint.identification.algorithm,
                    ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                  type: object
              type: object
            enableMetrics:
              description: Enable the metrics for the Kafka Bridge. Default is false.
              type: boolean
            http:
              description: The HTTP related configuration.
              properties:
                cors:
                  description: CORS configuration for the HTTP Bridge.
                  properties:
                    allowedMethods:
                      description: List of allowed HTTP methods.
                      items:
                        type: string
                      type: array
                    allowedOrigins:
                      description: List of allowed origins. Java regular expressions
                        can be used.
                      items:
                        type: string
                      type: array
                  required:
                  - allowedOrigins
                  - allowedMethods
                  type: object
                port:
                  description: The port which is the server listening on.
                  minimum: 1023
                  type: integer
              type: object
            image:
              description: The docker image for the pods.
              type: string
            jvmOptions:
              description: '**Currently not supported** JVM Options for pods.'
              properties:
                -XX:
                  description: A map of -XX options to the JVM.
                  type: object
                -Xms:
                  description: -Xms option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                -Xmx:
                  description: -Xmx option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                gcLoggingEnabled:
                  description: Specifies whether the Garbage Collection logging is
                    enabled. The default is false.
                  type: boolean
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.
                  items:
                    properties:
                      name:
                        description: The system property name.
                        type: string
                      value:
                        description: The system property value.
                        type: string
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            logging:
              description: Logging configuration for Kafka Bridge.
              properties:
                loggers:
                  description: A Map from logger name to logger level.
                  type: object
                name:
                  description: The name of the `ConfigMap` from which to get the logging
                    configuration.
                  type: string
                type:
                  description: Logging type, must be either 'inline' or 'external'.
                  enum:
                  - inline
                  - external
                  type: string
              required:
              - type
              type: object
            producer:
              description: Kafka producer related configuration.
              properties:
                config:
                  description: 'The Kafka producer configuration used for producer
                    instances created by the bridge. Properties with the following
                    prefixes cannot be set: ssl., bootstrap.servers, sasl., security.
                    (with the exception of: ssl.endpoint.identification.algorithm,
                    ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                  type: object
              type: object
            readinessProbe:
              description: Pod readiness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            replicas:
              description: The number of pods in the `Deployment`.
              minimum: 0
              type: integer
            resources:
              description: CPU and memory resources to reserve.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            template:
              description: Template for Kafka Bridge resources. The template allows
                users to specify how is the `Deployment` and `Pods` generated.
              properties:
                apiService:
                  description: Template for Kafka Bridge API `Service`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                bridgeContainer:
                  description: Template for the Kafka Bridge container.
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.
                      items:
                        properties:
                          name:
                            description: The environment variable key.
                            type: string
                          value:
                            description: The environment variable value.
                            type: string
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.
                      properties:
                        allowPrivilegeEscalation:
                          type: boolean
                        capabilities:
                          properties:
                            add:
                              items:
                                type: string
                              type: array
                            drop:
                              items:
                                type: string
                              type: array
                          type: object
                        privileged:
                          type: boolean
                        procMount:
                          type: string
                        readOnlyRootFilesystem:
                          type: boolean
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                  type: object
                deployment:
                  description: Template for Kafka Bridge `Deployment`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                pod:
                  description: Template for Kafka Bridge `Pods`.
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod. When
                        the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster
                        Operator and the `imagePullSecrets` option are specified,
                        only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS`
                        variable is ignored.
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                    priorityClassName:
                      description: The name of the priority class used to assign priority
                        to the pods. For more information about priority classes,
                        see {K8sPriorityClass}.
                      type: string
                    schedulerName:
                      description: The name of the scheduler used to dispatch this
                        `Pod`. If not specified, the default scheduler will be used.
                      type: string
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.
                      properties:
                        fsGroup:
                          type: integer
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        supplementalGroups:
                          items:
                            type: integer
                          type: array
                        sysctls:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: The grace period is the duration in seconds after
                        the processes running in the pod are sent a termination signal,
                        and the time when the processes are forcibly halted with a
                        kill signal. Set this value to longer than the expected cleanup
                        time for your process. Value must be a non-negative integer.
                        A zero value indicates delete immediately. You might need
                        to increase the grace period for very large Kafka clusters,
                        so that the Kafka brokers have enough time to transfer their
                        work to another broker before they are terminated. Defaults
                        to 30 seconds.
                      minimum: 0
                      type: integer
                    tolerations:
                      description: The pod's tolerations.
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka Bridge `PodDisruptionBudget`.
                  properties:
                    maxUnavailable:
                      description: Maximum number of unavailable pods to allow automatic
                        Pod eviction. A Pod eviction is allowed when the `maxUnavailable`
                        number of pods or fewer are unavailable after the eviction.
                        Setting this value to 0 prevents all voluntary evictions,
                        so the pods must be evicted manually. Defaults to 1.
                      minimum: 0
                      type: integer
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
            tls:
              description: TLS configuration for connecting Kafka Bridge to the cluster.
              properties:
                trustedCertificates:
                  description: Trusted certificates for TLS connection.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
              type: object
            tracing:
              description: The configuration of tracing in Kafka Bridge.
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.
                  enum:
                  - jaeger
                  type: string
              required:
              - type
              type: object
          required:
          - bootstrapServers
          type: object
        status:
          description: The status of the Kafka Bridge.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            podSelector:
              description: Label selector for pods providing this resource.
              properties:
                matchExpressions:
                  items:
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                matchLabels:
                  type: object
              type: object
            replicas:
              description: The current number of pods being used to provide this resource.
              type: integer
            url:
              description: The URL at which external client applications can access
                the Kafka Bridge.
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkaconnectors.kafka.strimzi.io
spec:
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaConnector
    listKind: KafkaConnectorList
    plural: kafkaconnectors
    shortNames:
    - kctr
    singular: kafkaconnector
  scope: Namespaced
  subresources:
    scale:
      specReplicasPath: .spec.tasksMax
      statusReplicasPath: .status.tasksMax
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka Connector.
          properties:
            class:
              description: The Class for the Kafka Connector.
              type: string
            config:
              description: 'The Kafka Connector configuration. The following properties
                cannot be set: connector.class, tasks.max.'
              type: object
            pause:
              description: Whether the connector should be paused. Defaults to false.
              type: boolean
            tasksMax:
              description: The maximum number of tasks for the Kafka Connector.
              minimum: 1
              type: integer
          type: object
        status:
          description: The status of the Kafka Connector.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            connectorStatus:
              description: The connector status, as reported by the Kafka Connect
                REST API.
              type: object
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            tasksMax:
              description: The maximum number of tasks for the Kafka Connector.
              type: integer
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkaconnects.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of Kafka Connect replicas
    name: Desired replicas
    type: integer
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaConnect
    listKind: KafkaConnectList
    plural: kafkaconnects
    shortNames:
    - kc
    singular: kafkaconnect
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka Connect cluster.
          properties:
            affinity:
              description: The pod's affinity rules.
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            authentication:
              description: Authentication configuration for Kafka Connect.
              properties:
                accessToken:
                  description: Link to Kubernetes Secret containing the access token
                    which was obtained from the authorization server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                accessTokenIsJwt:
                  description: Configure whether access token should be treated as
                    JWT. This should be set to `false` if the authorization server
                    returns opaque tokens. Defaults to `true`.
                  type: boolean
                certificateAndKey:
                  description: Reference to the `Secret` which holds the certificate
                    and private key pair.
                  properties:
                    certificate:
                      description: The name of the file certificate in the Secret.
                      type: string
                    key:
                      description: The name of the private key in the Secret.
                      type: string
                    secretName:
                      description: The name of the Secret containing the certificate.
                      type: string
                  required:
                  - certificate
                  - key
                  - secretName
                  type: object
                clientId:
                  description: OAuth Client ID which the Kafka client can use to authenticate
                    against the OAuth server and use the token endpoint URI.
                  type: string
                clientSecret:
                  description: Link to Kubernetes Secret containing the OAuth client
                    secret which the Kafka client can use to authenticate against
                    the OAuth server and use the token endpoint URI.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                disableTlsHostnameVerification:
                  description: Enable or disable TLS hostname verification. Default
                    value is `false`.
                  type: boolean
                maxTokenExpirySeconds:
                  description: Set or limit time-to-live of the access tokens to the
                    specified number of seconds. This should be set if the authorization
                    server returns opaque tokens.
                  type: integer
                passwordSecret:
                  description: Reference to the `Secret` which holds the password.
                  properties:
                    password:
                      description: The name of the key in the Secret under which the
                        password is stored.
                      type: string
                    secretName:
                      description: The name of the Secret containing the password.
                      type: string
                  required:
                  - password
                  - secretName
                  type: object
                refreshToken:
                  description: Link to Kubernetes Secret containing the refresh token
                    which can be used to obtain access token from the authorization
                    server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                scope:
                  description: OAuth scope to use when authenticating against the
                    authorization server. Some authorization servers require this
                    to be set. The possible values depend on how authorization server
                    is configured. By default `scope` is not specified when doing
                    the token endpoint request.
                  type: string
                tlsTrustedCertificates:
                  description: Trusted certificates for TLS connection to the OAuth
                    server.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
                tokenEndpointUri:
                  description: Authorization server token endpoint URI.
                  type: string
                type:
                  description: Authentication type. Currently the only supported types
                    are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type
                    uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL
                    PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication.
                    The `tls` type uses TLS Client Authentication. The `tls` type
                    is supported only over TLS connections.
                  enum:
                  - tls
                  - scram-sha-512
                  - plain
                  - oauth
                  type: string
                username:
                  description: Username used for the authentication.
                  type: string
              required:
              - type
              type: object
            bootstrapServers:
              description: Bootstrap servers to connect to. This should be given as
                a comma separated list of _<hostname>_:‍_<port>_ pairs.
              type: string
            config:
              description: 'The Kafka Connect configuration. Properties with the following
                prefixes cannot be set: ssl., sasl., security., listeners, plugin.path,
                rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes
                (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites,
                ssl.protocol, ssl.enabled.protocols).'
              type: object
            externalConfiguration:
              description: Pass data from Secrets or ConfigMaps to the Kafka Connect
                pods and use them to configure connectors.
              properties:
                env:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as environment variables.
                  items:
                    properties:
                      name:
                        description: Name of the environment variable which will be
                          passed to the Kafka Connect pods. The name of the environment
                          variable cannot start with `KAFKA_` or `STRIMZI_`.
                        type: string
                      valueFrom:
                        description: Value of the environment variable which will
                          be passed to the Kafka Connect pods. It can be passed either
                          as a reference to Secret or ConfigMap field. The field has
                          to specify exactly one Secret or ConfigMap.
                        properties:
                          configMapKeyRef:
                            description: Refernce to a key in a ConfigMap.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          secretKeyRef:
                            description: Reference to a key in a Secret.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                        type: object
                    required:
                    - name
                    - valueFrom
                    type: object
                  type: array
                volumes:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as volumes.
                  items:
                    properties:
                      configMap:
                        description: Reference to a key in a ConfigMap. Exactly one
                          Secret or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          optional:
                            type: boolean
                        type: object
                      name:
                        description: Name of the volume which will be added to the
                          Kafka Connect pods.
                        type: string
                      secret:
                        description: Reference to a key in a Secret. Exactly one Secret
                          or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          optional:
                            type: boolean
                          secretName:
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  type: array
              type: object
            image:
              description: The docker image for the pods.
              type: string
            jvmOptions:
              description: JVM Options for pods.
              properties:
                -XX:
                  description: A map of -XX options to the JVM.
                  type: object
                -Xms:
                  description: -Xms option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                -Xmx:
                  description: -Xmx option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                gcLoggingEnabled:
                  description: Specifies whether the Garbage Collection logging is
                    enabled. The default is false.
                  type: boolean
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.
                  items:
                    properties:
                      name:
                        description: The system property name.
                        type: string
                      value:
                        description: The system property value.
                        type: string
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            logging:
              description: Logging configuration for Kafka Connect.
              properties:
                loggers:
                  description: A Map from logger name to logger level.
                  type: object
                name:
                  description: The name of the `ConfigMap` from which to get the logging
                    configuration.
                  type: string
                type:
                  description: Logging type, must be either 'inline' or 'external'.
                  enum:
                  - inline
                  - external
                  type: string
              required:
              - type
              type: object
            metrics:
              description: The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter
                for details of the structure of this configuration.
              type: object
            readinessProbe:
              description: Pod readiness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            replicas:
              description: The number of pods in the Kafka Connect group.
              type: integer
            resources:
              description: The maximum limits for CPU and memory resources and the
                requested initial resources.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            template:
              description: Template for Kafka Connect and Kafka Connect S2I resources.
                The template allows users to specify how the `Deployment`, `Pods`
                and `Service` are generated.
              properties:
                apiService:
                  description: Template for Kafka Connect API `Service`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                connectContainer:
                  description: Template for the Kafka Connect container.
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.
                      items:
                        properties:
                          name:
                            description: The environment variable key.
                            type: string
                          value:
                            description: The environment variable value.
                            type: string
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.
                      properties:
                        allowPrivilegeEscalation:
                          type: boolean
                        capabilities:
                          properties:
                            add:
                              items:
                                type: string
                              type: array
                            drop:
                              items:
                                type: string
                              type: array
                          type: object
                        privileged:
                          type: boolean
                        procMount:
                          type: string
                        readOnlyRootFilesystem:
                          type: boolean
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                  type: object
                deployment:
                  description: Template for Kafka Connect `Deployment`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                pod:
                  description: Template for Kafka Connect `Pods`.
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod. When
                        the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster
                        Operator and the `imagePullSecrets` option are specified,
                        only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS`
                        variable is ignored.
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                    priorityClassName:
                      description: The name of the priority class used to assign priority
                        to the pods. For more information about priority classes,
                        see {K8sPriorityClass}.
                      type: string
                    schedulerName:
                      description: The name of the scheduler used to dispatch this
                        `Pod`. If not specified, the default scheduler will be used.
                      type: string
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.
                      properties:
                        fsGroup:
                          type: integer
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        supplementalGroups:
                          items:
                            type: integer
                          type: array
                        sysctls:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: The grace period is the duration in seconds after
                        the processes running in the pod are sent a termination signal,
                        and the time when the processes are forcibly halted with a
                        kill signal. Set this value to longer than the expected cleanup
                        time for your process. Value must be a non-negative integer.
                        A zero value indicates delete immediately. You might need
                        to increase the grace period for very large Kafka clusters,
                        so that the Kafka brokers have enough time to transfer their
                        work to another broker before they are terminated. Defaults
                        to 30 seconds.
                      minimum: 0
                      type: integer
                    tolerations:
                      description: The pod's tolerations.
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka Connect `PodDisruptionBudget`.
                  properties:
                    maxUnavailable:
                      description: Maximum number of unavailable pods to allow automatic
                        Pod eviction. A Pod eviction is allowed when the `maxUnavailable`
                        number of pods or fewer are unavailable after the eviction.
                        Setting this value to 0 prevents all voluntary evictions,
                        so the pods must be evicted manually. Defaults to 1.
                      minimum: 0
                      type: integer
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
            tls:
              description: TLS configuration.
              properties:
                trustedCertificates:
                  description: Trusted certificates for TLS connection.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
              type: object
            tolerations:
              description: The pod's tolerations.
              items:
                properties:
                  effect:
                    type: string
                  key:
                    type: string
                  operator:
                    type: string
                  tolerationSeconds:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            tracing:
              description: The configuration of tracing in Kafka Connect.
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.
                  enum:
                  - jaeger
                  type: string
              required:
              - type
              type: object
            version:
              description: The Kafka Connect version. Defaults to {DefaultKafkaVersion}.
                Consult the user documentation to understand the process required
                to upgrade or downgrade the version.
              type: string
          required:
          - bootstrapServers
          type: object
        status:
          description: The status of the Kafka Connect cluster.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            connectorPlugins:
              description: The list of connector plugins available in this Kafka Connect
                deployment.
              items:
                properties:
                  class:
                    description: The class of the connector plugin.
                    type: string
                  type:
                    description: The type of the connector plugin. The available types
                      are `sink` and `source`.
                    type: string
                  version:
                    description: The version of the connector plugin.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            podSelector:
              description: Label selector for pods providing this resource.
              properties:
                matchExpressions:
                  items:
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                matchLabels:
                  type: object
              type: object
            replicas:
              description: The current number of pods being used to provide this resource.
              type: integer
            url:
              description: The URL of the REST API endpoint for managing and monitoring
                Kafka Connect connectors.
              type: string
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkaconnects2is.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of Kafka Connect replicas
    name: Desired replicas
    type: integer
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaConnectS2I
    listKind: KafkaConnectS2IList
    plural: kafkaconnects2is
    shortNames:
    - kcs2i
    singular: kafkaconnects2i
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka Connect Source-to-Image (S2I)
            cluster.
          properties:
            affinity:
              description: The pod's affinity rules.
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            authentication:
              description: Authentication configuration for Kafka Connect.
              properties:
                accessToken:
                  description: Link to Kubernetes Secret containing the access token
                    which was obtained from the authorization server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                accessTokenIsJwt:
                  description: Configure whether access token should be treated as
                    JWT. This should be set to `false` if the authorization server
                    returns opaque tokens. Defaults to `true`.
                  type: boolean
                certificateAndKey:
                  description: Reference to the `Secret` which holds the certificate
                    and private key pair.
                  properties:
                    certificate:
                      description: The name of the file certificate in the Secret.
                      type: string
                    key:
                      description: The name of the private key in the Secret.
                      type: string
                    secretName:
                      description: The name of the Secret containing the certificate.
                      type: string
                  required:
                  - certificate
                  - key
                  - secretName
                  type: object
                clientId:
                  description: OAuth Client ID which the Kafka client can use to authenticate
                    against the OAuth server and use the token endpoint URI.
                  type: string
                clientSecret:
                  description: Link to Kubernetes Secret containing the OAuth client
                    secret which the Kafka client can use to authenticate against
                    the OAuth server and use the token endpoint URI.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                disableTlsHostnameVerification:
                  description: Enable or disable TLS hostname verification. Default
                    value is `false`.
                  type: boolean
                maxTokenExpirySeconds:
                  description: Set or limit time-to-live of the access tokens to the
                    specified number of seconds. This should be set if the authorization
                    server returns opaque tokens.
                  type: integer
                passwordSecret:
                  description: Reference to the `Secret` which holds the password.
                  properties:
                    password:
                      description: The name of the key in the Secret under which the
                        password is stored.
                      type: string
                    secretName:
                      description: The name of the Secret containing the password.
                      type: string
                  required:
                  - password
                  - secretName
                  type: object
                refreshToken:
                  description: Link to Kubernetes Secret containing the refresh token
                    which can be used to obtain access token from the authorization
                    server.
                  properties:
                    key:
                      description: The key under which the secret value is stored
                        in the Kubernetes Secret.
                      type: string
                    secretName:
                      description: The name of the Kubernetes Secret containing the
                        secret value.
                      type: string
                  required:
                  - key
                  - secretName
                  type: object
                scope:
                  description: OAuth scope to use when authenticating against the
                    authorization server. Some authorization servers require this
                    to be set. The possible values depend on how authorization server
                    is configured. By default `scope` is not specified when doing
                    the token endpoint request.
                  type: string
                tlsTrustedCertificates:
                  description: Trusted certificates for TLS connection to the OAuth
                    server.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
                tokenEndpointUri:
                  description: Authorization server token endpoint URI.
                  type: string
                type:
                  description: Authentication type. Currently the only supported types
                    are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512` type
                    uses SASL SCRAM-SHA-512 Authentication. `plain` type uses SASL
                    PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER Authentication.
                    The `tls` type uses TLS Client Authentication. The `tls` type
                    is supported only over TLS connections.
                  enum:
                  - tls
                  - scram-sha-512
                  - plain
                  - oauth
                  type: string
                username:
                  description: Username used for the authentication.
                  type: string
              required:
              - type
              type: object
            bootstrapServers:
              description: Bootstrap servers to connect to. This should be given as
                a comma separated list of _<hostname>_:‍_<port>_ pairs.
              type: string
            buildResources:
              description: CPU and memory resources to reserve.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            config:
              description: 'The Kafka Connect configuration. Properties with the following
                prefixes cannot be set: ssl., sasl., security., listeners, plugin.path,
                rest., bootstrap.servers, consumer.interceptor.classes, producer.interceptor.classes
                (with the exception of: ssl.endpoint.identification.algorithm, ssl.cipher.suites,
                ssl.protocol, ssl.enabled.protocols).'
              type: object
            externalConfiguration:
              description: Pass data from Secrets or ConfigMaps to the Kafka Connect
                pods and use them to configure connectors.
              properties:
                env:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as environment variables.
                  items:
                    properties:
                      name:
                        description: Name of the environment variable which will be
                          passed to the Kafka Connect pods. The name of the environment
                          variable cannot start with `KAFKA_` or `STRIMZI_`.
                        type: string
                      valueFrom:
                        description: Value of the environment variable which will
                          be passed to the Kafka Connect pods. It can be passed either
                          as a reference to Secret or ConfigMap field. The field has
                          to specify exactly one Secret or ConfigMap.
                        properties:
                          configMapKeyRef:
                            description: Refernce to a key in a ConfigMap.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          secretKeyRef:
                            description: Reference to a key in a Secret.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                        type: object
                    required:
                    - name
                    - valueFrom
                    type: object
                  type: array
                volumes:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as volumes.
                  items:
                    properties:
                      configMap:
                        description: Reference to a key in a ConfigMap. Exactly one
                          Secret or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          optional:
                            type: boolean
                        type: object
                      name:
                        description: Name of the volume which will be added to the
                          Kafka Connect pods.
                        type: string
                      secret:
                        description: Reference to a key in a Secret. Exactly one Secret
                          or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          optional:
                            type: boolean
                          secretName:
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  type: array
              type: object
            image:
              description: The docker image for the pods.
              type: string
            insecureSourceRepository:
              description: When true this configures the source repository with the
                'Local' reference policy and an import policy that accepts insecure
                source tags.
              type: boolean
            jvmOptions:
              description: JVM Options for pods.
              properties:
                -XX:
                  description: A map of -XX options to the JVM.
                  type: object
                -Xms:
                  description: -Xms option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                -Xmx:
                  description: -Xmx option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                gcLoggingEnabled:
                  description: Specifies whether the Garbage Collection logging is
                    enabled. The default is false.
                  type: boolean
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.
                  items:
                    properties:
                      name:
                        description: The system property name.
                        type: string
                      value:
                        description: The system property value.
                        type: string
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            logging:
              description: Logging configuration for Kafka Connect.
              properties:
                loggers:
                  description: A Map from logger name to logger level.
                  type: object
                name:
                  description: The name of the `ConfigMap` from which to get the logging
                    configuration.
                  type: string
                type:
                  description: Logging type, must be either 'inline' or 'external'.
                  enum:
                  - inline
                  - external
                  type: string
              required:
              - type
              type: object
            metrics:
              description: The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter
                for details of the structure of this configuration.
              type: object
            readinessProbe:
              description: Pod readiness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            replicas:
              description: The number of pods in the Kafka Connect group.
              type: integer
            resources:
              description: The maximum limits for CPU and memory resources and the
                requested initial resources.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            template:
              description: Template for Kafka Connect and Kafka Connect S2I resources.
                The template allows users to specify how the `Deployment`, `Pods`
                and `Service` are generated.
              properties:
                apiService:
                  description: Template for Kafka Connect API `Service`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                connectContainer:
                  description: Template for the Kafka Connect container.
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.
                      items:
                        properties:
                          name:
                            description: The environment variable key.
                            type: string
                          value:
                            description: The environment variable value.
                            type: string
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.
                      properties:
                        allowPrivilegeEscalation:
                          type: boolean
                        capabilities:
                          properties:
                            add:
                              items:
                                type: string
                              type: array
                            drop:
                              items:
                                type: string
                              type: array
                          type: object
                        privileged:
                          type: boolean
                        procMount:
                          type: string
                        readOnlyRootFilesystem:
                          type: boolean
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                  type: object
                deployment:
                  description: Template for Kafka Connect `Deployment`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                pod:
                  description: Template for Kafka Connect `Pods`.
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod. When
                        the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster
                        Operator and the `imagePullSecrets` option are specified,
                        only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS`
                        variable is ignored.
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                    priorityClassName:
                      description: The name of the priority class used to assign priority
                        to the pods. For more information about priority classes,
                        see {K8sPriorityClass}.
                      type: string
                    schedulerName:
                      description: The name of the scheduler used to dispatch this
                        `Pod`. If not specified, the default scheduler will be used.
                      type: string
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.
                      properties:
                        fsGroup:
                          type: integer
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        supplementalGroups:
                          items:
                            type: integer
                          type: array
                        sysctls:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: The grace period is the duration in seconds after
                        the processes running in the pod are sent a termination signal,
                        and the time when the processes are forcibly halted with a
                        kill signal. Set this value to longer than the expected cleanup
                        time for your process. Value must be a non-negative integer.
                        A zero value indicates delete immediately. You might need
                        to increase the grace period for very large Kafka clusters,
                        so that the Kafka brokers have enough time to transfer their
                        work to another broker before they are terminated. Defaults
                        to 30 seconds.
                      minimum: 0
                      type: integer
                    tolerations:
                      description: The pod's tolerations.
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka Connect `PodDisruptionBudget`.
                  properties:
                    maxUnavailable:
                      description: Maximum number of unavailable pods to allow automatic
                        Pod eviction. A Pod eviction is allowed when the `maxUnavailable`
                        number of pods or fewer are unavailable after the eviction.
                        Setting this value to 0 prevents all voluntary evictions,
                        so the pods must be evicted manually. Defaults to 1.
                      minimum: 0
                      type: integer
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
            tls:
              description: TLS configuration.
              properties:
                trustedCertificates:
                  description: Trusted certificates for TLS connection.
                  items:
                    properties:
                      certificate:
                        description: The name of the file certificate in the Secret.
                        type: string
                      secretName:
                        description: The name of the Secret containing the certificate.
                        type: string
                    required:
                    - certificate
                    - secretName
                    type: object
                  type: array
              type: object
            tolerations:
              description: The pod's tolerations.
              items:
                properties:
                  effect:
                    type: string
                  key:
                    type: string
                  operator:
                    type: string
                  tolerationSeconds:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            tracing:
              description: The configuration of tracing in Kafka Connect.
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.
                  enum:
                  - jaeger
                  type: string
              required:
              - type
              type: object
            version:
              description: The Kafka Connect version. Defaults to {DefaultKafkaVersion}.
                Consult the user documentation to understand the process required
                to upgrade or downgrade the version.
              type: string
          required:
          - bootstrapServers
          type: object
        status:
          description: The status of the Kafka Connect Source-to-Image (S2I) cluster.
          properties:
            buildConfigName:
              description: The name of the build configuration.
              type: string
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            connectorPlugins:
              description: The list of connector plugins available in this Kafka Connect
                deployment.
              items:
                properties:
                  class:
                    description: The class of the connector plugin.
                    type: string
                  type:
                    description: The type of the connector plugin. The available types
                      are `sink` and `source`.
                    type: string
                  version:
                    description: The version of the connector plugin.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            podSelector:
              description: Label selector for pods providing this resource.
              properties:
                matchExpressions:
                  items:
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                matchLabels:
                  type: object
              type: object
            replicas:
              description: The current number of pods being used to provide this resource.
              type: integer
            url:
              description: The URL of the REST API endpoint for managing and monitoring
                Kafka Connect connectors.
              type: string
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkamirrormaker2s.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of Kafka MirrorMaker 2.0 replicas
    name: Desired replicas
    type: integer
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaMirrorMaker2
    listKind: KafkaMirrorMaker2List
    plural: kafkamirrormaker2s
    shortNames:
    - kmm2
    singular: kafkamirrormaker2
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka MirrorMaker 2.0 cluster.
          properties:
            affinity:
              description: The pod's affinity rules.
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            clusters:
              description: Kafka clusters for mirroring.
              items:
                properties:
                  alias:
                    description: Alias used to reference the Kafka cluster.
                    pattern: ^[a-zA-Z0-9\._\-]{1,100}$
                    type: string
                  authentication:
                    description: Authentication configuration for connecting to the
                      cluster.
                    properties:
                      accessToken:
                        description: Link to Kubernetes Secret containing the access
                          token which was obtained from the authorization server.
                        properties:
                          key:
                            description: The key under which the secret value is stored
                              in the Kubernetes Secret.
                            type: string
                          secretName:
                            description: The name of the Kubernetes Secret containing
                              the secret value.
                            type: string
                        required:
                        - key
                        - secretName
                        type: object
                      accessTokenIsJwt:
                        description: Configure whether access token should be treated
                          as JWT. This should be set to `false` if the authorization
                          server returns opaque tokens. Defaults to `true`.
                        type: boolean
                      certificateAndKey:
                        description: Reference to the `Secret` which holds the certificate
                          and private key pair.
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          key:
                            description: The name of the private key in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - key
                        - secretName
                        type: object
                      clientId:
                        description: OAuth Client ID which the Kafka client can use
                          to authenticate against the OAuth server and use the token
                          endpoint URI.
                        type: string
                      clientSecret:
                        description: Link to Kubernetes Secret containing the OAuth
                          client secret which the Kafka client can use to authenticate
                          against the OAuth server and use the token endpoint URI.
                        properties:
                          key:
                            description: The key under which the secret value is stored
                              in the Kubernetes Secret.
                            type: string
                          secretName:
                            description: The name of the Kubernetes Secret containing
                              the secret value.
                            type: string
                        required:
                        - key
                        - secretName
                        type: object
                      disableTlsHostnameVerification:
                        description: Enable or disable TLS hostname verification.
                          Default value is `false`.
                        type: boolean
                      maxTokenExpirySeconds:
                        description: Set or limit time-to-live of the access tokens
                          to the specified number of seconds. This should be set if
                          the authorization server returns opaque tokens.
                        type: integer
                      passwordSecret:
                        description: Reference to the `Secret` which holds the password.
                        properties:
                          password:
                            description: The name of the key in the Secret under which
                              the password is stored.
                            type: string
                          secretName:
                            description: The name of the Secret containing the password.
                            type: string
                        required:
                        - password
                        - secretName
                        type: object
                      refreshToken:
                        description: Link to Kubernetes Secret containing the refresh
                          token which can be used to obtain access token from the
                          authorization server.
                        properties:
                          key:
                            description: The key under which the secret value is stored
                              in the Kubernetes Secret.
                            type: string
                          secretName:
                            description: The name of the Kubernetes Secret containing
                              the secret value.
                            type: string
                        required:
                        - key
                        - secretName
                        type: object
                      scope:
                        description: OAuth scope to use when authenticating against
                          the authorization server. Some authorization servers require
                          this to be set. The possible values depend on how authorization
                          server is configured. By default `scope` is not specified
                          when doing the token endpoint request.
                        type: string
                      tlsTrustedCertificates:
                        description: Trusted certificates for TLS connection to the
                          OAuth server.
                        items:
                          properties:
                            certificate:
                              description: The name of the file certificate in the
                                Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                          - certificate
                          - secretName
                          type: object
                        type: array
                      tokenEndpointUri:
                        description: Authorization server token endpoint URI.
                        type: string
                      type:
                        description: Authentication type. Currently the only supported
                          types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512`
                          type uses SASL SCRAM-SHA-512 Authentication. `plain` type
                          uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER
                          Authentication. The `tls` type uses TLS Client Authentication.
                          The `tls` type is supported only over TLS connections.
                        enum:
                        - tls
                        - scram-sha-512
                        - plain
                        - oauth
                        type: string
                      username:
                        description: Username used for the authentication.
                        type: string
                    required:
                    - type
                    type: object
                  bootstrapServers:
                    description: A comma-separated list of `host:port` pairs for establishing
                      the connection to the Kafka cluster.
                    type: string
                  config:
                    description: 'The MirrorMaker 2.0 cluster config. Properties with
                      the following prefixes cannot be set: ssl., sasl., security.,
                      listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes,
                      producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm,
                      ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                    type: object
                  tls:
                    description: TLS configuration for connecting MirrorMaker 2.0
                      connectors to a cluster.
                    properties:
                      trustedCertificates:
                        description: Trusted certificates for TLS connection.
                        items:
                          properties:
                            certificate:
                              description: The name of the file certificate in the
                                Secret.
                              type: string
                            secretName:
                              description: The name of the Secret containing the certificate.
                              type: string
                          required:
                          - certificate
                          - secretName
                          type: object
                        type: array
                    type: object
                required:
                - alias
                - bootstrapServers
                type: object
              type: array
            connectCluster:
              description: The cluster alias used for Kafka Connect. The alias must
                match a cluster in the list at `spec.clusters`.
              type: string
            externalConfiguration:
              description: Pass data from Secrets or ConfigMaps to the Kafka Connect
                pods and use them to configure connectors.
              properties:
                env:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as environment variables.
                  items:
                    properties:
                      name:
                        description: Name of the environment variable which will be
                          passed to the Kafka Connect pods. The name of the environment
                          variable cannot start with `KAFKA_` or `STRIMZI_`.
                        type: string
                      valueFrom:
                        description: Value of the environment variable which will
                          be passed to the Kafka Connect pods. It can be passed either
                          as a reference to Secret or ConfigMap field. The field has
                          to specify exactly one Secret or ConfigMap.
                        properties:
                          configMapKeyRef:
                            description: Refernce to a key in a ConfigMap.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                          secretKeyRef:
                            description: Reference to a key in a Secret.
                            properties:
                              key:
                                type: string
                              name:
                                type: string
                              optional:
                                type: boolean
                            type: object
                        type: object
                    required:
                    - name
                    - valueFrom
                    type: object
                  type: array
                volumes:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as volumes.
                  items:
                    properties:
                      configMap:
                        description: Reference to a key in a ConfigMap. Exactly one
                          Secret or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          name:
                            type: string
                          optional:
                            type: boolean
                        type: object
                      name:
                        description: Name of the volume which will be added to the
                          Kafka Connect pods.
                        type: string
                      secret:
                        description: Reference to a key in a Secret. Exactly one Secret
                          or ConfigMap has to be specified.
                        properties:
                          defaultMode:
                            type: integer
                          items:
                            items:
                              properties:
                                key:
                                  type: string
                                mode:
                                  type: integer
                                path:
                                  type: string
                              type: object
                            type: array
                          optional:
                            type: boolean
                          secretName:
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  type: array
              type: object
            image:
              description: The docker image for the pods.
              type: string
            jvmOptions:
              description: JVM Options for pods.
              properties:
                -XX:
                  description: A map of -XX options to the JVM.
                  type: object
                -Xms:
                  description: -Xms option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                -Xmx:
                  description: -Xmx option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                gcLoggingEnabled:
                  description: Specifies whether the Garbage Collection logging is
                    enabled. The default is false.
                  type: boolean
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.
                  items:
                    properties:
                      name:
                        description: The system property name.
                        type: string
                      value:
                        description: The system property value.
                        type: string
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            logging:
              description: Logging configuration for Kafka Connect.
              properties:
                loggers:
                  description: A Map from logger name to logger level.
                  type: object
                name:
                  description: The name of the `ConfigMap` from which to get the logging
                    configuration.
                  type: string
                type:
                  description: Logging type, must be either 'inline' or 'external'.
                  enum:
                  - inline
                  - external
                  type: string
              required:
              - type
              type: object
            metrics:
              description: The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter
                for details of the structure of this configuration.
              type: object
            mirrors:
              description: Configuration of the MirrorMaker 2.0 connectors.
              items:
                properties:
                  checkpointConnector:
                    description: The specification of the Kafka MirrorMaker 2.0 checkpoint
                      connector.
                    properties:
                      config:
                        description: 'The Kafka Connector configuration. The following
                          properties cannot be set: connector.class, tasks.max.'
                        type: object
                      pause:
                        description: Whether the connector should be paused. Defaults
                          to false.
                        type: boolean
                      tasksMax:
                        description: The maximum number of tasks for the Kafka Connector.
                        minimum: 1
                        type: integer
                    type: object
                  groupsBlacklistPattern:
                    description: A regular expression matching the consumer groups
                      to exclude from mirroring. Comma-separated lists are also supported.
                    type: string
                  groupsPattern:
                    description: A regular expression matching the consumer groups
                      to be mirrored. Comma-separated lists are also supported.
                    type: string
                  heartbeatConnector:
                    description: The specification of the Kafka MirrorMaker 2.0 heartbeat
                      connector.
                    properties:
                      config:
                        description: 'The Kafka Connector configuration. The following
                          properties cannot be set: connector.class, tasks.max.'
                        type: object
                      pause:
                        description: Whether the connector should be paused. Defaults
                          to false.
                        type: boolean
                      tasksMax:
                        description: The maximum number of tasks for the Kafka Connector.
                        minimum: 1
                        type: integer
                    type: object
                  sourceCluster:
                    description: The alias of the source cluster used by the Kafka
                      MirrorMaker 2.0 connectors. The alias must match a cluster in
                      the list at `spec.clusters`.
                    type: string
                  sourceConnector:
                    description: The specification of the Kafka MirrorMaker 2.0 source
                      connector.
                    properties:
                      config:
                        description: 'The Kafka Connector configuration. The following
                          properties cannot be set: connector.class, tasks.max.'
                        type: object
                      pause:
                        description: Whether the connector should be paused. Defaults
                          to false.
                        type: boolean
                      tasksMax:
                        description: The maximum number of tasks for the Kafka Connector.
                        minimum: 1
                        type: integer
                    type: object
                  targetCluster:
                    description: The alias of the target cluster used by the Kafka
                      MirrorMaker 2.0 connectors. The alias must match a cluster in
                      the list at `spec.clusters`.
                    type: string
                  topicsBlacklistPattern:
                    description: A regular expression matching the topics to exclude
                      from mirroring. Comma-separated lists are also supported.
                    type: string
                  topicsPattern:
                    description: A regular expression matching the topics to be mirrored,
                      for example, "topic1\|topic2\|topic3". Comma-separated lists
                      are also supported.
                    type: string
                required:
                - sourceCluster
                - targetCluster
                type: object
              type: array
            readinessProbe:
              description: Pod readiness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            replicas:
              description: The number of pods in the Kafka Connect group.
              type: integer
            resources:
              description: The maximum limits for CPU and memory resources and the
                requested initial resources.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            template:
              description: Template for Kafka Connect and Kafka Connect S2I resources.
                The template allows users to specify how the `Deployment`, `Pods`
                and `Service` are generated.
              properties:
                apiService:
                  description: Template for Kafka Connect API `Service`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                connectContainer:
                  description: Template for the Kafka Connect container.
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.
                      items:
                        properties:
                          name:
                            description: The environment variable key.
                            type: string
                          value:
                            description: The environment variable value.
                            type: string
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.
                      properties:
                        allowPrivilegeEscalation:
                          type: boolean
                        capabilities:
                          properties:
                            add:
                              items:
                                type: string
                              type: array
                            drop:
                              items:
                                type: string
                              type: array
                          type: object
                        privileged:
                          type: boolean
                        procMount:
                          type: string
                        readOnlyRootFilesystem:
                          type: boolean
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                  type: object
                deployment:
                  description: Template for Kafka Connect `Deployment`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                pod:
                  description: Template for Kafka Connect `Pods`.
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod. When
                        the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster
                        Operator and the `imagePullSecrets` option are specified,
                        only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS`
                        variable is ignored.
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                    priorityClassName:
                      description: The name of the priority class used to assign priority
                        to the pods. For more information about priority classes,
                        see {K8sPriorityClass}.
                      type: string
                    schedulerName:
                      description: The name of the scheduler used to dispatch this
                        `Pod`. If not specified, the default scheduler will be used.
                      type: string
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.
                      properties:
                        fsGroup:
                          type: integer
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        supplementalGroups:
                          items:
                            type: integer
                          type: array
                        sysctls:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: The grace period is the duration in seconds after
                        the processes running in the pod are sent a termination signal,
                        and the time when the processes are forcibly halted with a
                        kill signal. Set this value to longer than the expected cleanup
                        time for your process. Value must be a non-negative integer.
                        A zero value indicates delete immediately. You might need
                        to increase the grace period for very large Kafka clusters,
                        so that the Kafka brokers have enough time to transfer their
                        work to another broker before they are terminated. Defaults
                        to 30 seconds.
                      minimum: 0
                      type: integer
                    tolerations:
                      description: The pod's tolerations.
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka Connect `PodDisruptionBudget`.
                  properties:
                    maxUnavailable:
                      description: Maximum number of unavailable pods to allow automatic
                        Pod eviction. A Pod eviction is allowed when the `maxUnavailable`
                        number of pods or fewer are unavailable after the eviction.
                        Setting this value to 0 prevents all voluntary evictions,
                        so the pods must be evicted manually. Defaults to 1.
                      minimum: 0
                      type: integer
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
            tolerations:
              description: The pod's tolerations.
              items:
                properties:
                  effect:
                    type: string
                  key:
                    type: string
                  operator:
                    type: string
                  tolerationSeconds:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            tracing:
              description: The configuration of tracing in Kafka Connect.
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.
                  enum:
                  - jaeger
                  type: string
              required:
              - type
              type: object
            version:
              description: The Kafka Connect version. Defaults to {DefaultKafkaVersion}.
                Consult the user documentation to understand the process required
                to upgrade or downgrade the version.
              type: string
          required:
          - connectCluster
          type: object
        status:
          description: The status of the Kafka MirrorMaker 2.0 cluster.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            connectorPlugins:
              description: The list of connector plugins available in this Kafka Connect
                deployment.
              items:
                properties:
                  class:
                    description: The class of the connector plugin.
                    type: string
                  type:
                    description: The type of the connector plugin. The available types
                      are `sink` and `source`.
                    type: string
                  version:
                    description: The version of the connector plugin.
                    type: string
                type: object
              type: array
            connectors:
              description: List of MirrorMaker 2.0 connector statuses, as reported
                by the Kafka Connect REST API.
              items:
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            podSelector:
              description: Label selector for pods providing this resource.
              properties:
                matchExpressions:
                  items:
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                matchLabels:
                  type: object
              type: object
            replicas:
              description: The current number of pods being used to provide this resource.
              type: integer
            url:
              description: The URL of the REST API endpoint for managing and monitoring
                Kafka Connect connectors.
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkamirrormakers.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.replicas
    description: The desired number of Kafka MirrorMaker replicas
    name: Desired replicas
    type: integer
  - JSONPath: .spec.consumer.bootstrapServers
    description: The boostrap servers for the consumer
    name: Consumer Bootstrap Servers
    priority: 1
    type: string
  - JSONPath: .spec.producer.bootstrapServers
    description: The boostrap servers for the producer
    name: Producer Bootstrap Servers
    priority: 1
    type: string
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaMirrorMaker
    listKind: KafkaMirrorMakerList
    plural: kafkamirrormakers
    shortNames:
    - kmm
    singular: kafkamirrormaker
  scope: Namespaced
  subresources:
    scale:
      labelSelectorPath: .status.selector
      specReplicasPath: .spec.replicas
      statusReplicasPath: .status.replicas
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of Kafka MirrorMaker.
          properties:
            affinity:
              description: The pod's affinity rules.
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          weight:
                            type: integer
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key:
                                      type: string
                                    operator:
                                      type: string
                                    values:
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                type: array
                              matchLabels:
                                type: object
                            type: object
                          namespaces:
                            items:
                              type: string
                            type: array
                          topologyKey:
                            type: string
                        type: object
                      type: array
                  type: object
              type: object
            consumer:
              description: Configuration of source cluster.
              properties:
                authentication:
                  description: Authentication configuration for connecting to the
                    cluster.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access
                        token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated
                        as JWT. This should be set to `false` if the authorization
                        server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate
                        and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                      - certificate
                      - key
                      - secretName
                      type: object
                    clientId:
                      description: OAuth Client ID which the Kafka client can use
                        to authenticate against the OAuth server and use the token
                        endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth
                        client secret which the Kafka client can use to authenticate
                        against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default
                        value is `false`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens
                        to the specified number of seconds. This should be set if
                        the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which
                            the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                      - password
                      - secretName
                      type: object
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh
                        token which can be used to obtain access token from the authorization
                        server.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against
                        the authorization server. Some authorization servers require
                        this to be set. The possible values depend on how authorization
                        server is configured. By default `scope` is not specified
                        when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the
                        OAuth server.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the only supported
                        types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512`
                        type uses SASL SCRAM-SHA-512 Authentication. `plain` type
                        uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER
                        Authentication. The `tls` type uses TLS Client Authentication.
                        The `tls` type is supported only over TLS connections.
                      enum:
                      - tls
                      - scram-sha-512
                      - plain
                      - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                  - type
                  type: object
                bootstrapServers:
                  description: A list of host:port pairs for establishing the initial
                    connection to the Kafka cluster.
                  type: string
                config:
                  description: 'The MirrorMaker consumer config. Properties with the
                    following prefixes cannot be set: ssl., bootstrap.servers, group.id,
                    sasl., security., interceptor.classes (with the exception of:
                    ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol,
                    ssl.enabled.protocols).'
                  type: object
                groupId:
                  description: A unique string that identifies the consumer group
                    this consumer belongs to.
                  type: string
                numStreams:
                  description: Specifies the number of consumer stream threads to
                    create.
                  minimum: 1
                  type: integer
                offsetCommitInterval:
                  description: Specifies the offset auto-commit interval in ms. Default
                    value is 60000.
                  type: integer
                tls:
                  description: TLS configuration for connecting MirrorMaker to the
                    cluster.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - secretName
                        type: object
                      type: array
                  type: object
              required:
              - groupId
              - bootstrapServers
              type: object
            image:
              description: The docker image for the pods.
              type: string
            jvmOptions:
              description: JVM Options for pods.
              properties:
                -XX:
                  description: A map of -XX options to the JVM.
                  type: object
                -Xms:
                  description: -Xms option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                -Xmx:
                  description: -Xmx option to to the JVM.
                  pattern: '[0-9]+[mMgG]?'
                  type: string
                gcLoggingEnabled:
                  description: Specifies whether the Garbage Collection logging is
                    enabled. The default is false.
                  type: boolean
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.
                  items:
                    properties:
                      name:
                        description: The system property name.
                        type: string
                      value:
                        description: The system property value.
                        type: string
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            logging:
              description: Logging configuration for MirrorMaker.
              properties:
                loggers:
                  description: A Map from logger name to logger level.
                  type: object
                name:
                  description: The name of the `ConfigMap` from which to get the logging
                    configuration.
                  type: string
                type:
                  description: Logging type, must be either 'inline' or 'external'.
                  enum:
                  - inline
                  - external
                  type: string
              required:
              - type
              type: object
            metrics:
              description: The Prometheus JMX Exporter configuration. See {JMXExporter}
                for details of the structure of this configuration.
              type: object
            producer:
              description: Configuration of target cluster.
              properties:
                abortOnSendFailure:
                  description: Flag to set the MirrorMaker to exit on a failed send.
                    Default value is `true`.
                  type: boolean
                authentication:
                  description: Authentication configuration for connecting to the
                    cluster.
                  properties:
                    accessToken:
                      description: Link to Kubernetes Secret containing the access
                        token which was obtained from the authorization server.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    accessTokenIsJwt:
                      description: Configure whether access token should be treated
                        as JWT. This should be set to `false` if the authorization
                        server returns opaque tokens. Defaults to `true`.
                      type: boolean
                    certificateAndKey:
                      description: Reference to the `Secret` which holds the certificate
                        and private key pair.
                      properties:
                        certificate:
                          description: The name of the file certificate in the Secret.
                          type: string
                        key:
                          description: The name of the private key in the Secret.
                          type: string
                        secretName:
                          description: The name of the Secret containing the certificate.
                          type: string
                      required:
                      - certificate
                      - key
                      - secretName
                      type: object
                    clientId:
                      description: OAuth Client ID which the Kafka client can use
                        to authenticate against the OAuth server and use the token
                        endpoint URI.
                      type: string
                    clientSecret:
                      description: Link to Kubernetes Secret containing the OAuth
                        client secret which the Kafka client can use to authenticate
                        against the OAuth server and use the token endpoint URI.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default
                        value is `false`.
                      type: boolean
                    maxTokenExpirySeconds:
                      description: Set or limit time-to-live of the access tokens
                        to the specified number of seconds. This should be set if
                        the authorization server returns opaque tokens.
                      type: integer
                    passwordSecret:
                      description: Reference to the `Secret` which holds the password.
                      properties:
                        password:
                          description: The name of the key in the Secret under which
                            the password is stored.
                          type: string
                        secretName:
                          description: The name of the Secret containing the password.
                          type: string
                      required:
                      - password
                      - secretName
                      type: object
                    refreshToken:
                      description: Link to Kubernetes Secret containing the refresh
                        token which can be used to obtain access token from the authorization
                        server.
                      properties:
                        key:
                          description: The key under which the secret value is stored
                            in the Kubernetes Secret.
                          type: string
                        secretName:
                          description: The name of the Kubernetes Secret containing
                            the secret value.
                          type: string
                      required:
                      - key
                      - secretName
                      type: object
                    scope:
                      description: OAuth scope to use when authenticating against
                        the authorization server. Some authorization servers require
                        this to be set. The possible values depend on how authorization
                        server is configured. By default `scope` is not specified
                        when doing the token endpoint request.
                      type: string
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the
                        OAuth server.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authentication type. Currently the only supported
                        types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512`
                        type uses SASL SCRAM-SHA-512 Authentication. `plain` type
                        uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER
                        Authentication. The `tls` type uses TLS Client Authentication.
                        The `tls` type is supported only over TLS connections.
                      enum:
                      - tls
                      - scram-sha-512
                      - plain
                      - oauth
                      type: string
                    username:
                      description: Username used for the authentication.
                      type: string
                  required:
                  - type
                  type: object
                bootstrapServers:
                  description: A list of host:port pairs for establishing the initial
                    connection to the Kafka cluster.
                  type: string
                config:
                  description: 'The MirrorMaker producer config. Properties with the
                    following prefixes cannot be set: ssl., bootstrap.servers, sasl.,
                    security., interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm,
                    ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).'
                  type: object
                tls:
                  description: TLS configuration for connecting MirrorMaker to the
                    cluster.
                  properties:
                    trustedCertificates:
                      description: Trusted certificates for TLS connection.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - secretName
                        type: object
                      type: array
                  type: object
              required:
              - bootstrapServers
              type: object
            readinessProbe:
              description: Pod readiness checking.
              properties:
                failureThreshold:
                  description: Minimum consecutive failures for the probe to be considered
                    failed after having succeeded. Defaults to 3. Minimum value is
                    1.
                  type: integer
                initialDelaySeconds:
                  description: The initial delay before first the health is first
                    checked.
                  minimum: 0
                  type: integer
                periodSeconds:
                  description: How often (in seconds) to perform the probe. Default
                    to 10 seconds. Minimum value is 1.
                  type: integer
                successThreshold:
                  description: Minimum consecutive successes for the probe to be considered
                    successful after having failed. Defaults to 1. Must be 1 for liveness.
                    Minimum value is 1.
                  type: integer
                timeoutSeconds:
                  description: The timeout for each attempted health check.
                  minimum: 0
                  type: integer
              type: object
            replicas:
              description: The number of pods in the `Deployment`.
              minimum: 1
              type: integer
            resources:
              description: CPU and memory resources to reserve.
              properties:
                limits:
                  type: object
                requests:
                  type: object
              type: object
            template:
              description: Template to specify how Kafka MirrorMaker resources, `Deployments`
                and `Pods`, are generated.
              properties:
                deployment:
                  description: Template for Kafka MirrorMaker `Deployment`.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
                mirrorMakerContainer:
                  description: Template for Kafka MirrorMaker container.
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.
                      items:
                        properties:
                          name:
                            description: The environment variable key.
                            type: string
                          value:
                            description: The environment variable value.
                            type: string
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.
                      properties:
                        allowPrivilegeEscalation:
                          type: boolean
                        capabilities:
                          properties:
                            add:
                              items:
                                type: string
                              type: array
                            drop:
                              items:
                                type: string
                              type: array
                          type: object
                        privileged:
                          type: boolean
                        procMount:
                          type: string
                        readOnlyRootFilesystem:
                          type: boolean
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                  type: object
                pod:
                  description: Template for Kafka MirrorMaker `Pods`.
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  weight:
                                    type: integer
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod. When
                        the `STRIMZI_IMAGE_PULL_SECRETS` environment variable in Cluster
                        Operator and the `imagePullSecrets` option are specified,
                        only the `imagePullSecrets` variable is used and the `STRIMZI_IMAGE_PULL_SECRETS`
                        variable is ignored.
                      items:
                        properties:
                          name:
                            type: string
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                    priorityClassName:
                      description: The name of the priority class used to assign priority
                        to the pods. For more information about priority classes,
                        see {K8sPriorityClass}.
                      type: string
                    schedulerName:
                      description: The name of the scheduler used to dispatch this
                        `Pod`. If not specified, the default scheduler will be used.
                      type: string
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.
                      properties:
                        fsGroup:
                          type: integer
                        runAsGroup:
                          type: integer
                        runAsNonRoot:
                          type: boolean
                        runAsUser:
                          type: integer
                        seLinuxOptions:
                          properties:
                            level:
                              type: string
                            role:
                              type: string
                            type:
                              type: string
                            user:
                              type: string
                          type: object
                        supplementalGroups:
                          items:
                            type: integer
                          type: array
                        sysctls:
                          items:
                            properties:
                              name:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec:
                              type: string
                            gmsaCredentialSpecName:
                              type: string
                          type: object
                      type: object
                    terminationGracePeriodSeconds:
                      description: The grace period is the duration in seconds after
                        the processes running in the pod are sent a termination signal,
                        and the time when the processes are forcibly halted with a
                        kill signal. Set this value to longer than the expected cleanup
                        time for your process. Value must be a non-negative integer.
                        A zero value indicates delete immediately. You might need
                        to increase the grace period for very large Kafka clusters,
                        so that the Kafka brokers have enough time to transfer their
                        work to another broker before they are terminated. Defaults
                        to 30 seconds.
                      minimum: 0
                      type: integer
                    tolerations:
                      description: The pod's tolerations.
                      items:
                        properties:
                          effect:
                            type: string
                          key:
                            type: string
                          operator:
                            type: string
                          tolerationSeconds:
                            type: integer
                          value:
                            type: string
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka MirrorMaker `PodDisruptionBudget`.
                  properties:
                    maxUnavailable:
                      description: Maximum number of unavailable pods to allow automatic
                        Pod eviction. A Pod eviction is allowed when the `maxUnavailable`
                        number of pods or fewer are unavailable after the eviction.
                        Setting this value to 0 prevents all voluntary evictions,
                        so the pods must be evicted manually. Defaults to 1.
                      minimum: 0
                      type: integer
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
            tolerations:
              description: The pod's tolerations.
              items:
                properties:
                  effect:
                    type: string
                  key:
                    type: string
                  operator:
                    type: string
                  tolerationSeconds:
                    type: integer
                  value:
                    type: string
                type: object
              type: array
            tracing:
              description: The configuration of tracing in Kafka MirrorMaker.
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.
                  enum:
                  - jaeger
                  type: string
              required:
              - type
              type: object
            version:
              description: The Kafka MirrorMaker version. Defaults to {DefaultKafkaVersion}.
                Consult the documentation to understand the process required to upgrade
                or downgrade the version.
              type: string
            whitelist:
              description: List of topics which are included for mirroring. This option
                allows any regular expression using Java-style regular expressions.
                Mirroring two topics named A and B is achieved by using the whitelist
                `'A\|B'`. Or, as a special case, you can mirror all topics using the
                whitelist '*'. You can also specify multiple regular expressions separated
                by commas.
              type: string
          required:
          - replicas
          - whitelist
          - consumer
          - producer
          type: object
        status:
          description: The status of Kafka MirrorMaker.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            podSelector:
              description: Label selector for pods providing this resource.
              properties:
                matchExpressions:
                  items:
                    properties:
                      key:
                        type: string
                      operator:
                        type: string
                      values:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                matchLabels:
                  type: object
              type: object
            replicas:
              description: The current number of pods being used to provide this resource.
              type: integer
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkarebalances.kafka.strimzi.io
spec:
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaRebalance
    listKind: KafkaRebalanceList
    plural: kafkarebalances
    shortNames:
    - kr
    singular: kafkarebalance
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka rebalance.
          properties:
            concurrentIntraBrokerPartitionMovements:
              description: The upper bound of ongoing partition replica movements
                between disks within each broker. Default is 2.
              minimum: 0
              type: integer
            concurrentLeaderMovements:
              description: The upper bound of ongoing partition leadership movements.
                Default is 1000.
              minimum: 0
              type: integer
            concurrentPartitionMovementsPerBroker:
              description: The upper bound of ongoing partition replica movements
                going into/out of each broker. Default is 5.
              minimum: 0
              type: integer
            excludedTopics:
              description: A regular expression where any matching topics will be
                excluded from the calculation of optimization proposals. This expression
                will be parsed by the java.util.regex.Pattern class; for more information
                on the supported formar consult the documentation for that class.
              type: string
            goals:
              description: A list of goals, ordered by decreasing priority, to use
                for generating and executing the rebalance proposal. The supported
                goals are available at https://github.com/linkedin/cruise-control#goals.
                If an empty goals list is provided, the goals declared in the default.goals
                Cruise Control configuration parameter are used.
              items:
                type: string
              type: array
            replicationThrottle:
              description: The upper bound, in bytes per second, on the bandwidth
                used to move replicas. There is no limit by default.
              minimum: 0
              type: integer
            skipHardGoalCheck:
              description: Whether to allow the hard goals specified in the Kafka
                CR to be skipped in optimization proposal generation. This can be
                useful when some of those hard goals are preventing a balance solution
                being found. Default is false.
              type: boolean
          type: object
        status:
          description: The status of the Kafka rebalance.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            optimizationResult:
              description: A JSON object describing the optimization result.
              type: object
            sessionId:
              description: The session identifier for requests to Cruise Control pertaining
                to this KafkaRebalance resource. This is used by the Kafka Rebalance
                operator to track the status of ongoing rebalancing operations.
              type: string
          type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkas.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.kafka.replicas
    description: The desired number of Kafka replicas in the cluster
    name: Desired Kafka replicas
    type: integer
  - JSONPath: .spec.zookeeper.replicas
    description: The desired number of ZooKeeper replicas in the cluster
    name: Desired ZK replicas
    type: integer
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    shortNames:
    - k
    singular: kafka
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka and ZooKeeper clusters, and
            Topic Operator.
          properties:
            clientsCa:
              description: Configuration of the clients certificate authority.
              properties:
                certificateExpirationPolicy:
                  description: How should CA certificate expiration be handled when
                    `generateCertificateAuthority=true`. The default is for a new
                    CA certificate to be generated reusing the existing private key.
                  enum:
                  - renew-certificate
                  - replace-key
                  type: string
                generateCertificateAuthority:
                  description: If true then Certificate Authority certificates will
                    be generated automatically. Otherwise the user will need to provide
                    a Secret with the CA certificate. Default is true.
                  type: boolean
                renewalDays:
                  description: The number of days in the certificate renewal period.
                    This is the number of days before the a certificate expires during
                    which renewal actions may be performed. When `generateCertificateAuthority`
                    is true, this will cause the generation of a new certificate.
                    When `generateCertificateAuthority` is true, this will cause extra
                    logging at WARN level about the pending certificate expiry. Default
                    is 30.
                  minimum: 1
                  type: integer
                validityDays:
                  description: The number of days generated certificates should be
                    valid for. The default is 365.
                  minimum: 1
                  type: integer
              type: object
            clusterCa:
              description: Configuration of the cluster certificate authority.
              properties:
                certificateExpirationPolicy:
                  description: How should CA certificate expiration be handled when
                    `generateCertificateAuthority=true`. The default is for a new
                    CA certificate to be generated reusing the existing private key.
                  enum:
                  - renew-certificate
                  - replace-key
                  type: string
                generateCertificateAuthority:
                  description: If true then Certificate Authority certificates will
                    be generated automatically. Otherwise the user will need to provide
                    a Secret with the CA certificate. Default is true.
                  type: boolean
                renewalDays:
                  description: The number of days in the certificate renewal period.
                    This is the number of days before the a certificate expires during
                    which renewal actions may be performed. When `generateCertificateAuthority`
                    is true, this will cause the generation of a new certificate.
                    When `generateCertificateAuthority` is true, this will cause extra
                    logging at WARN level about the pending certificate expiry. Default
                    is 30.
                  minimum: 1
                  type: integer
                validityDays:
                  description: The number of days generated certificates should be
                    valid for. The default is 365.
                  minimum: 1
                  type: integer
              type: object
            cruiseControl:
              description: Configuration for Cruise Control deployment. Deploys a
                Cruise Control instance when specified.
              properties:
                brokerCapacity:
                  description: The Cruise Control `brokerCapacity` configuration.
                  properties:
                    cpuUtilization:
                      description: Broker capacity for CPU resource utilization as
                        a percentage (0 - 100).
                      maximum: 100
                      minimum: 0
                      type: integer
                    disk:
                      description: Broker capacity for disk in bytes, for example,
                        100Gi.
                      pattern: ^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$
                      type: string
                    inboundNetwork:
                      description: Broker capacity for inbound network throughput
                        in bytes per second, for example, 10000KB/s.
                      pattern: '[0-9]+([KMG]i?)?B/s'
                      type: string
                    outboundNetwork:
                      description: Broker capacity for outbound network throughput
                        in bytes per second, for example 10000KB/s.
                      pattern: '[0-9]+([KMG]i?)?B/s'
                      type: string
                  type: object
                config:
                  description: 'The Cruise Control configuration. For a full list
                    of configuration options refer to https://github.com/linkedin/cruise-control/wiki/Configurations.
                    Note that properties with the following prefixes cannot be set:
                    bootstrap.servers, client.id, zookeeper., network., security.,
                    failed.brokers.zk.path,webserver.http., webserver.api.urlprefix,
                    webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers,
                    metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,capacity.config.file,
                    self.healing., anomaly.detection., ssl.'
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                jvmOptions:
                  description: JVM Options for the Cruise Control container.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging
                        is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will
                        be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking for the Cruise Control container.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                logging:
                  description: Logging configuration (log4j1) for Cruise Control.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                    name:
                      description: The name of the `ConfigMap` from which to get the
                        logging configuration.
                      type: string
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                      - inline
                      - external
                      type: string
                  required:
                  - type
                  type: object
                readinessProbe:
                  description: Pod readiness checking for the Cruise Control container.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                resources:
                  description: CPU and memory resources to reserve for the Cruise
                    Control container.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                template:
                  description: Template to specify how Cruise Control resources, `Deployments`
                    and `Pods`, are generated.
                  properties:
                    apiService:
                      description: Template for Cruise Control API `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    cruiseControlContainer:
                      description: Template for the Cruise Control container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Cruise Control `Deployment`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Cruise Control `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Cruise Control `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow
                            automatic Pod eviction. A Pod eviction is allowed when
                            the `maxUnavailable` number of pods or fewer are unavailable
                            after the eviction. Setting this value to 0 prevents all
                            voluntary evictions, so the pods must be evicted manually.
                            Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDistruptionBugetTemplate`
                            resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    tlsSidecarContainer:
                      description: Template for the Cruise Control TLS sidecar container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar configuration.
                  properties:
                    image:
                      description: The docker image for the container.
                      type: string
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logLevel:
                      description: The log level for the TLS sidecar. Default value
                        is `notice`.
                      enum:
                      - emerg
                      - alert
                      - crit
                      - err
                      - warning
                      - notice
                      - info
                      - debug
                      type: string
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                  type: object
              type: object
            entityOperator:
              description: Configuration of the Entity Operator.
              properties:
                affinity:
                  description: The pod's affinity rules.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                template:
                  description: Template for Entity Operator resources. The template
                    allows users to specify how is the `Deployment` and `Pods` generated.
                  properties:
                    deployment:
                      description: Template for Entity Operator `Deployment`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Entity Operator `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    tlsSidecarContainer:
                      description: Template for the Entity Operator TLS sidecar container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    topicOperatorContainer:
                      description: Template for the Entity Topic Operator container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    userOperatorContainer:
                      description: Template for the Entity User Operator container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar configuration.
                  properties:
                    image:
                      description: The docker image for the container.
                      type: string
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logLevel:
                      description: The log level for the TLS sidecar. Default value
                        is `notice`.
                      enum:
                      - emerg
                      - alert
                      - crit
                      - err
                      - warning
                      - notice
                      - info
                      - debug
                      type: string
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                  type: object
                tolerations:
                  description: The pod's tolerations.
                  items:
                    properties:
                      effect:
                        type: string
                      key:
                        type: string
                      operator:
                        type: string
                      tolerationSeconds:
                        type: integer
                      value:
                        type: string
                    type: object
                  type: array
                topicOperator:
                  description: Configuration of the Topic Operator.
                  properties:
                    image:
                      description: The image to use for the Topic Operator.
                      type: string
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          description: A map of -XX options to the JVM.
                          type: object
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: '[0-9]+[mMgG]?'
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: '[0-9]+[mMgG]?'
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging
                            is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which
                            will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration.
                      properties:
                        loggers:
                          description: A Map from logger name to logger level.
                          type: object
                        name:
                          description: The name of the `ConfigMap` from which to get
                            the logging configuration.
                          type: string
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                          - inline
                          - external
                          type: string
                      required:
                      - type
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    reconciliationIntervalSeconds:
                      description: Interval between periodic reconciliations.
                      minimum: 0
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                    topicMetadataMaxAttempts:
                      description: The number of attempts at getting topic metadata.
                      minimum: 0
                      type: integer
                    watchedNamespace:
                      description: The namespace the Topic Operator should watch.
                      type: string
                    zookeeperSessionTimeoutSeconds:
                      description: Timeout for the ZooKeeper session.
                      minimum: 0
                      type: integer
                  type: object
                userOperator:
                  description: Configuration of the User Operator.
                  properties:
                    image:
                      description: The image to use for the User Operator.
                      type: string
                    jvmOptions:
                      description: JVM Options for pods.
                      properties:
                        -XX:
                          description: A map of -XX options to the JVM.
                          type: object
                        -Xms:
                          description: -Xms option to to the JVM.
                          pattern: '[0-9]+[mMgG]?'
                          type: string
                        -Xmx:
                          description: -Xmx option to to the JVM.
                          pattern: '[0-9]+[mMgG]?'
                          type: string
                        gcLoggingEnabled:
                          description: Specifies whether the Garbage Collection logging
                            is enabled. The default is false.
                          type: boolean
                        javaSystemProperties:
                          description: A map of additional system properties which
                            will be passed using the `-D` option to the JVM.
                          items:
                            properties:
                              name:
                                description: The system property name.
                                type: string
                              value:
                                description: The system property value.
                                type: string
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logging:
                      description: Logging configuration.
                      properties:
                        loggers:
                          description: A Map from logger name to logger level.
                          type: object
                        name:
                          description: The name of the `ConfigMap` from which to get
                            the logging configuration.
                          type: string
                        type:
                          description: Logging type, must be either 'inline' or 'external'.
                          enum:
                          - inline
                          - external
                          type: string
                      required:
                      - type
                      type: object
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    reconciliationIntervalSeconds:
                      description: Interval between periodic reconciliations.
                      minimum: 0
                      type: integer
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                    watchedNamespace:
                      description: The namespace the User Operator should watch.
                      type: string
                    zookeeperSessionTimeoutSeconds:
                      description: Timeout for the ZooKeeper session.
                      minimum: 0
                      type: integer
                  type: object
              type: object
            jmxTrans:
              description: Configuration for JmxTrans. When the property is present
                a JmxTrans deployment is created for gathering JMX metrics from each
                Kafka broker. For more information see https://github.com/jmxtrans/jmxtrans[JmxTrans
                GitHub].
              properties:
                image:
                  description: The image to use for the JmxTrans.
                  type: string
                kafkaQueries:
                  description: Queries to send to the Kafka brokers to define what
                    data should be read from each broker. For more information on
                    these properties see, xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate`
                    schema reference].
                  items:
                    properties:
                      attributes:
                        description: Determine which attributes of the targeted MBean
                          should be included.
                        items:
                          type: string
                        type: array
                      outputs:
                        description: List of the names of output definitions specified
                          in the spec.kafka.jmxTrans.outputDefinitions that have defined
                          where JMX metrics are pushed to, and in which data format.
                        items:
                          type: string
                        type: array
                      targetMBean:
                        description: If using wildcards instead of a specific MBean
                          then the data is gathered from multiple MBeans. Otherwise
                          if specifying an MBean then data is gathered from that specified
                          MBean.
                        type: string
                    required:
                    - targetMBean
                    - attributes
                    - outputs
                    type: object
                  type: array
                logLevel:
                  description: Sets the logging level of the JmxTrans deployment.For
                    more information see, https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans
                    Logging Level].
                  type: string
                outputDefinitions:
                  description: Defines the output hosts that will be referenced later
                    on. For more information on these properties see, xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate`
                    schema reference].
                  items:
                    properties:
                      flushDelayInSeconds:
                        description: How many seconds the JmxTrans waits before pushing
                          a new set of data out.
                        type: integer
                      host:
                        description: The DNS/hostname of the remote host that the
                          data is pushed to.
                        type: string
                      name:
                        description: Template for setting the name of the output definition.
                          This is used to identify where to send the results of queries
                          should be sent.
                        type: string
                      outputType:
                        description: Template for setting the format of the data that
                          will be pushed.For more information see https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans
                          OutputWriters].
                        type: string
                      port:
                        description: The port of the remote host that the data is
                          pushed to.
                        type: integer
                      typeNames:
                        description: Template for filtering data to be included in
                          response to a wildcard query. For more information see https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans
                          queries].
                        items:
                          type: string
                        type: array
                    required:
                    - outputType
                    - name
                    type: object
                  type: array
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                template:
                  description: Template for JmxTrans resources.
                  properties:
                    container:
                      description: Template for JmxTrans container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for JmxTrans `Deployment`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for JmxTrans `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
              required:
              - outputDefinitions
              - kafkaQueries
              type: object
            kafka:
              description: Configuration of the Kafka cluster.
              properties:
                affinity:
                  description: The pod's affinity rules.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                authorization:
                  description: Authorization configuration for Kafka brokers.
                  properties:
                    allowOnError:
                      description: Defines whether a Kafka client should be allowed
                        or denied by default when the authorizer fails to query the
                        Open Policy Agent, for example, when it is temporarily unavailable).
                        Defaults to `false` - all actions will be denied.
                      type: boolean
                    clientId:
                      description: OAuth Client ID which the Kafka client can use
                        to authenticate against the OAuth server and use the token
                        endpoint URI.
                      type: string
                    delegateToKafkaAcls:
                      description: Whether authorization decision should be delegated
                        to the 'Simple' authorizer if DENIED by Keycloak Authorization
                        Services policies.Default value is `false`.
                      type: boolean
                    disableTlsHostnameVerification:
                      description: Enable or disable TLS hostname verification. Default
                        value is `false`.
                      type: boolean
                    expireAfterMs:
                      description: The expiration of the records kept in the local
                        cache to avoid querying the Open Policy Agent for every request.
                        Defines how often the cached authorization decisions are reloaded
                        from the Open Policy Agent server. In milliseconds. Defaults
                        to `3600000`.
                      type: integer
                    initialCacheCapacity:
                      description: Initial capacity of the local cache used by the
                        authorizer to avoid querying the Open Policy Agent for every
                        request Defaults to `5000`.
                      type: integer
                    maximumCacheSize:
                      description: Maximum capacity of the local cache used by the
                        authorizer to avoid querying the Open Policy Agent for every
                        request. Defaults to `50000`.
                      type: integer
                    superUsers:
                      description: List of super users. Should contain list of user
                        principals which should get unlimited access rights.
                      items:
                        type: string
                      type: array
                    tlsTrustedCertificates:
                      description: Trusted certificates for TLS connection to the
                        OAuth server.
                      items:
                        properties:
                          certificate:
                            description: The name of the file certificate in the Secret.
                            type: string
                          secretName:
                            description: The name of the Secret containing the certificate.
                            type: string
                        required:
                        - certificate
                        - secretName
                        type: object
                      type: array
                    tokenEndpointUri:
                      description: Authorization server token endpoint URI.
                      type: string
                    type:
                      description: Authorization type. Currently, the supported types
                        are `simple`, `keycloak`, and `opa`. `simple` authorization
                        type uses Kafka's `kafka.security.auth.SimpleAclAuthorizer`
                        class for authorization. `keycloak` authorization type uses
                        Keycloak Authorization Services for authorization. `opa` authorization
                        type uses Open Policy Agent based authorization.
                      enum:
                      - simple
                      - opa
                      - keycloak
                      type: string
                    url:
                      description: The URL used to connect to the Open Policy Agent
                        server. The URL has to include the policy which will be queried
                        by the authorizer. This option is required.
                      example: http://opa:8181/v1/data/kafka/authz/allow
                      type: string
                  required:
                  - type
                  type: object
                brokerRackInitImage:
                  description: The image of the init container used for initializing
                    the `broker.rack`.
                  type: string
                config:
                  description: 'Kafka broker config properties with the following
                    prefixes cannot be set: listeners, advertised., broker., listener.,
                    host.name, port, inter.broker.listener.name, sasl., ssl., security.,
                    password., principal.builder.class, log.dir, zookeeper.connect,
                    zookeeper.set.acl, authorizer., super.user, cruise.control.metrics.topic,
                    cruise.control.metrics.reporter.bootstrap.servers (with the exception
                    of: zookeeper.connection.timeout.ms, ssl.cipher.suites, ssl.protocol,
                    ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions,
                    cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms,cruise.control.metrics.topic.auto.create.retries,
                    cruise.control.metrics.topic.auto.create.timeout.ms).'
                  type: object
                image:
                  description: The docker image for the pods. The default value depends
                    on the configured `Kafka.spec.kafka.version`.
                  type: string
                jmxOptions:
                  description: JMX Options for Kafka brokers.
                  properties:
                    authentication:
                      description: Authentication configuration for connecting to
                        the Kafka JMX port.
                      properties:
                        type:
                          description: Authentication type. Currently the only supported
                            types are `password`.`password` type creates a username
                            and protected port with no TLS.
                          enum:
                          - password
                          type: string
                      required:
                      - type
                      type: object
                  type: object
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging
                        is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will
                        be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                listeners:
                  description: Configures listeners of Kafka brokers.
                  properties:
                    external:
                      description: Configures external listener on port 9094.
                      properties:
                        authentication:
                          description: Authentication configuration for Kafka brokers.
                          properties:
                            accessTokenIsJwt:
                              description: Configure whether the access token is treated
                                as JWT. This must be set to `false` if the authorization
                                server returns opaque tokens. Defaults to `true`.
                              type: boolean
                            checkAccessTokenType:
                              description: Configure whether the access token type
                                check is performed or not. This should be set to `false`
                                if the authorization server does not include 'typ'
                                claim in JWT token. Defaults to `true`.
                              type: boolean
                            checkIssuer:
                              description: Enable or disable issuer checking. By default
                                issuer is checked using the value configured by `validIssuerUri`.
                                Default value is `true`.
                              type: boolean
                            clientId:
                              description: OAuth Client ID which the Kafka broker
                                can use to authenticate against the authorization
                                server and use the introspect endpoint URI.
                              type: string
                            clientSecret:
                              description: Link to Kubernetes Secret containing the
                                OAuth client secret which the Kafka broker can use
                                to authenticate against the authorization server and
                                use the introspect endpoint URI.
                              properties:
                                key:
                                  description: The key under which the secret value
                                    is stored in the Kubernetes Secret.
                                  type: string
                                secretName:
                                  description: The name of the Kubernetes Secret containing
                                    the secret value.
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                            disableTlsHostnameVerification:
                              description: Enable or disable TLS hostname verification.
                                Default value is `false`.
                              type: boolean
                            enableECDSA:
                              description: Enable or disable ECDSA support by installing
                                BouncyCastle crypto provider. Default value is `false`.
                              type: boolean
                            fallbackUserNameClaim:
                              description: The fallback username claim to be used
                                for the user id if the claim specified by `userNameClaim`
                                is not present. This is useful when `client_credentials`
                                authentication only results in the client id being
                                provided in another claim. It only takes effect if
                                `userNameClaim` is set.
                              type: string
                            fallbackUserNamePrefix:
                              description: The prefix to use with the value of `fallbackUserNameClaim`
                                to construct the user id. This only takes effect if
                                `fallbackUserNameClaim` is true, and the value is
                                present for the claim. Mapping usernames and client
                                ids into the same user id space is useful in preventing
                                name collisions.
                              type: string
                            introspectionEndpointUri:
                              description: URI of the token introspection endpoint
                                which can be used to validate opaque non-JWT tokens.
                              type: string
                            jwksEndpointUri:
                              description: URI of the JWKS certificate endpoint, which
                                can be used for local JWT validation.
                              type: string
                            jwksExpirySeconds:
                              description: Configures how often are the JWKS certificates
                                considered valid. The expiry interval has to be at
                                least 60 seconds longer then the refresh interval
                                specified in `jwksRefreshSeconds`. Defaults to 360
                                seconds.
                              minimum: 1
                              type: integer
                            jwksRefreshSeconds:
                              description: Configures how often are the JWKS certificates
                                refreshed. The refresh interval has to be at least
                                60 seconds shorter then the expiry interval specified
                                in `jwksExpirySeconds`. Defaults to 300 seconds.
                              minimum: 1
                              type: integer
                            tlsTrustedCertificates:
                              description: Trusted certificates for TLS connection
                                to the OAuth server.
                              items:
                                properties:
                                  certificate:
                                    description: The name of the file certificate
                                      in the Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Secret containing
                                      the certificate.
                                    type: string
                                required:
                                - certificate
                                - secretName
                                type: object
                              type: array
                            type:
                              description: Authentication type. `oauth` type uses
                                SASL OAUTHBEARER Authentication. `scram-sha-512` type
                                uses SASL SCRAM-SHA-512 Authentication. `tls` type
                                uses TLS Client Authentication. `tls` type is supported
                                only on TLS listeners.
                              enum:
                              - tls
                              - scram-sha-512
                              - oauth
                              type: string
                            userInfoEndpointUri:
                              description: 'URI of the User Info Endpoint to use as
                                a fallback to obtaining the user id when the Introspection
                                Endpoint does not return information that can be used
                                for the user id. '
                              type: string
                            userNameClaim:
                              description: Name of the claim from the JWT authentication
                                token, Introspection Endpoint response or User Info
                                Endpoint response which will be used to extract the
                                user id. Defaults to `sub`.
                              type: string
                            validIssuerUri:
                              description: URI of the token issuer used for authentication.
                              type: string
                            validTokenType:
                              description: Valid value for the `token_type` attribute
                                returned by the Introspection Endpoint. No default
                                value, and not checked by default.
                              type: string
                          required:
                          - type
                          type: object
                        class:
                          description: Configures the `Ingress` class that defines
                            which `Ingress` controller will be used. If not set, the
                            `Ingress` class is set to `nginx`.
                          type: string
                        configuration:
                          description: External listener configuration.
                          properties:
                            bootstrap:
                              description: External bootstrap ingress configuration.
                              properties:
                                address:
                                  description: Additional address name for the bootstrap
                                    service. The address will be added to the list
                                    of subject alternative names of the TLS certificates.
                                  type: string
                                dnsAnnotations:
                                  description: Annotations that will be added to the
                                    `Ingress` resource. You can use this field to
                                    configure DNS providers such as External DNS.
                                  type: object
                                host:
                                  description: Host for the bootstrap route. This
                                    field will be used in the Ingress resource.
                                  type: string
                              required:
                              - host
                              type: object
                            brokerCertChainAndKey:
                              description: Reference to the `Secret` which holds the
                                certificate and private key pair. The certificate
                                can optionally contain the whole chain.
                              properties:
                                certificate:
                                  description: The name of the file certificate in
                                    the Secret.
                                  type: string
                                key:
                                  description: The name of the private key in the
                                    Secret.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the
                                    certificate.
                                  type: string
                              required:
                              - certificate
                              - key
                              - secretName
                              type: object
                            brokers:
                              description: External broker ingress configuration.
                              items:
                                properties:
                                  advertisedHost:
                                    description: The host name which will be used
                                      in the brokers' `advertised.brokers`.
                                    type: string
                                  advertisedPort:
                                    description: The port number which will be used
                                      in the brokers' `advertised.brokers`.
                                    type: integer
                                  broker:
                                    description: Id of the kafka broker (broker identifier).
                                    type: integer
                                  dnsAnnotations:
                                    description: Annotations that will be added to
                                      the `Ingress` resources for individual brokers.
                                      You can use this field to configure DNS providers
                                      such as External DNS.
                                    type: object
                                  host:
                                    description: Host for the broker ingress. This
                                      field will be used in the Ingress resource.
                                    type: string
                                required:
                                - host
                                type: object
                              type: array
                          type: object
                        networkPolicyPeers:
                          description: List of peers which should be able to connect
                            to this listener. Peers in this list are combined using
                            a logical OR operation. If this field is empty or missing,
                            all connections will be allowed for this listener. If
                            this field is present and contains at least one item,
                            the listener only allows the traffic which matches at
                            least one item in this list.
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    items:
                                      type: string
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                            type: object
                          type: array
                        overrides:
                          description: Overrides for external bootstrap and broker
                            services and externally advertised addresses.
                          properties:
                            bootstrap:
                              description: External bootstrap service configuration.
                              properties:
                                address:
                                  description: Additional address name for the bootstrap
                                    service. The address will be added to the list
                                    of subject alternative names of the TLS certificates.
                                  type: string
                                dnsAnnotations:
                                  description: Annotations that will be added to the
                                    `Service` resource. You can use this field to
                                    configure DNS providers such as External DNS.
                                  type: object
                                nodePort:
                                  description: Node port for the bootstrap service.
                                  type: integer
                              type: object
                            brokers:
                              description: External broker services configuration.
                              items:
                                properties:
                                  advertisedHost:
                                    description: The host name which will be used
                                      in the brokers' `advertised.brokers`.
                                    type: string
                                  advertisedPort:
                                    description: The port number which will be used
                                      in the brokers' `advertised.brokers`.
                                    type: integer
                                  broker:
                                    description: Id of the kafka broker (broker identifier).
                                    type: integer
                                  dnsAnnotations:
                                    description: Annotations that will be added to
                                      the `Service` resources for individual brokers.
                                      You can use this field to configure DNS providers
                                      such as External DNS.
                                    type: object
                                  nodePort:
                                    description: Node port for the broker service.
                                    type: integer
                                type: object
                              type: array
                          type: object
                        tls:
                          description: Enables TLS encryption on the listener. By
                            default set to `true` for enabled TLS encryption.
                          type: boolean
                        type:
                          description: "Type of the external listener. Currently the
                            supported types are `route`, `loadbalancer`, and `nodeport`.
                            \n\n* `route` type uses OpenShift Routes to expose Kafka.*
                            `loadbalancer` type uses LoadBalancer type services to
                            expose Kafka.* `nodeport` type uses NodePort type services
                            to expose Kafka.."
                          enum:
                          - route
                          - loadbalancer
                          - nodeport
                          - ingress
                          type: string
                      required:
                      - type
                      type: object
                    plain:
                      description: Configures plain listener on port 9092.
                      properties:
                        authentication:
                          description: 'Authentication configuration for this listener.
                            Since this listener does not use TLS transport you cannot
                            configure an authentication with `type: tls`.'
                          properties:
                            accessTokenIsJwt:
                              description: Configure whether the access token is treated
                                as JWT. This must be set to `false` if the authorization
                                server returns opaque tokens. Defaults to `true`.
                              type: boolean
                            checkAccessTokenType:
                              description: Configure whether the access token type
                                check is performed or not. This should be set to `false`
                                if the authorization server does not include 'typ'
                                claim in JWT token. Defaults to `true`.
                              type: boolean
                            checkIssuer:
                              description: Enable or disable issuer checking. By default
                                issuer is checked using the value configured by `validIssuerUri`.
                                Default value is `true`.
                              type: boolean
                            clientId:
                              description: OAuth Client ID which the Kafka broker
                                can use to authenticate against the authorization
                                server and use the introspect endpoint URI.
                              type: string
                            clientSecret:
                              description: Link to Kubernetes Secret containing the
                                OAuth client secret which the Kafka broker can use
                                to authenticate against the authorization server and
                                use the introspect endpoint URI.
                              properties:
                                key:
                                  description: The key under which the secret value
                                    is stored in the Kubernetes Secret.
                                  type: string
                                secretName:
                                  description: The name of the Kubernetes Secret containing
                                    the secret value.
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                            disableTlsHostnameVerification:
                              description: Enable or disable TLS hostname verification.
                                Default value is `false`.
                              type: boolean
                            enableECDSA:
                              description: Enable or disable ECDSA support by installing
                                BouncyCastle crypto provider. Default value is `false`.
                              type: boolean
                            fallbackUserNameClaim:
                              description: The fallback username claim to be used
                                for the user id if the claim specified by `userNameClaim`
                                is not present. This is useful when `client_credentials`
                                authentication only results in the client id being
                                provided in another claim. It only takes effect if
                                `userNameClaim` is set.
                              type: string
                            fallbackUserNamePrefix:
                              description: The prefix to use with the value of `fallbackUserNameClaim`
                                to construct the user id. This only takes effect if
                                `fallbackUserNameClaim` is true, and the value is
                                present for the claim. Mapping usernames and client
                                ids into the same user id space is useful in preventing
                                name collisions.
                              type: string
                            introspectionEndpointUri:
                              description: URI of the token introspection endpoint
                                which can be used to validate opaque non-JWT tokens.
                              type: string
                            jwksEndpointUri:
                              description: URI of the JWKS certificate endpoint, which
                                can be used for local JWT validation.
                              type: string
                            jwksExpirySeconds:
                              description: Configures how often are the JWKS certificates
                                considered valid. The expiry interval has to be at
                                least 60 seconds longer then the refresh interval
                                specified in `jwksRefreshSeconds`. Defaults to 360
                                seconds.
                              minimum: 1
                              type: integer
                            jwksRefreshSeconds:
                              description: Configures how often are the JWKS certificates
                                refreshed. The refresh interval has to be at least
                                60 seconds shorter then the expiry interval specified
                                in `jwksExpirySeconds`. Defaults to 300 seconds.
                              minimum: 1
                              type: integer
                            tlsTrustedCertificates:
                              description: Trusted certificates for TLS connection
                                to the OAuth server.
                              items:
                                properties:
                                  certificate:
                                    description: The name of the file certificate
                                      in the Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Secret containing
                                      the certificate.
                                    type: string
                                required:
                                - certificate
                                - secretName
                                type: object
                              type: array
                            type:
                              description: Authentication type. `oauth` type uses
                                SASL OAUTHBEARER Authentication. `scram-sha-512` type
                                uses SASL SCRAM-SHA-512 Authentication. `tls` type
                                uses TLS Client Authentication. `tls` type is supported
                                only on TLS listeners.
                              enum:
                              - tls
                              - scram-sha-512
                              - oauth
                              type: string
                            userInfoEndpointUri:
                              description: 'URI of the User Info Endpoint to use as
                                a fallback to obtaining the user id when the Introspection
                                Endpoint does not return information that can be used
                                for the user id. '
                              type: string
                            userNameClaim:
                              description: Name of the claim from the JWT authentication
                                token, Introspection Endpoint response or User Info
                                Endpoint response which will be used to extract the
                                user id. Defaults to `sub`.
                              type: string
                            validIssuerUri:
                              description: URI of the token issuer used for authentication.
                              type: string
                            validTokenType:
                              description: Valid value for the `token_type` attribute
                                returned by the Introspection Endpoint. No default
                                value, and not checked by default.
                              type: string
                          required:
                          - type
                          type: object
                        networkPolicyPeers:
                          description: List of peers which should be able to connect
                            to this listener. Peers in this list are combined using
                            a logical OR operation. If this field is empty or missing,
                            all connections will be allowed for this listener. If
                            this field is present and contains at least one item,
                            the listener only allows the traffic which matches at
                            least one item in this list.
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    items:
                                      type: string
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                    tls:
                      description: Configures TLS listener on port 9093.
                      properties:
                        authentication:
                          description: Authentication configuration for this listener.
                          properties:
                            accessTokenIsJwt:
                              description: Configure whether the access token is treated
                                as JWT. This must be set to `false` if the authorization
                                server returns opaque tokens. Defaults to `true`.
                              type: boolean
                            checkAccessTokenType:
                              description: Configure whether the access token type
                                check is performed or not. This should be set to `false`
                                if the authorization server does not include 'typ'
                                claim in JWT token. Defaults to `true`.
                              type: boolean
                            checkIssuer:
                              description: Enable or disable issuer checking. By default
                                issuer is checked using the value configured by `validIssuerUri`.
                                Default value is `true`.
                              type: boolean
                            clientId:
                              description: OAuth Client ID which the Kafka broker
                                can use to authenticate against the authorization
                                server and use the introspect endpoint URI.
                              type: string
                            clientSecret:
                              description: Link to Kubernetes Secret containing the
                                OAuth client secret which the Kafka broker can use
                                to authenticate against the authorization server and
                                use the introspect endpoint URI.
                              properties:
                                key:
                                  description: The key under which the secret value
                                    is stored in the Kubernetes Secret.
                                  type: string
                                secretName:
                                  description: The name of the Kubernetes Secret containing
                                    the secret value.
                                  type: string
                              required:
                              - key
                              - secretName
                              type: object
                            disableTlsHostnameVerification:
                              description: Enable or disable TLS hostname verification.
                                Default value is `false`.
                              type: boolean
                            enableECDSA:
                              description: Enable or disable ECDSA support by installing
                                BouncyCastle crypto provider. Default value is `false`.
                              type: boolean
                            fallbackUserNameClaim:
                              description: The fallback username claim to be used
                                for the user id if the claim specified by `userNameClaim`
                                is not present. This is useful when `client_credentials`
                                authentication only results in the client id being
                                provided in another claim. It only takes effect if
                                `userNameClaim` is set.
                              type: string
                            fallbackUserNamePrefix:
                              description: The prefix to use with the value of `fallbackUserNameClaim`
                                to construct the user id. This only takes effect if
                                `fallbackUserNameClaim` is true, and the value is
                                present for the claim. Mapping usernames and client
                                ids into the same user id space is useful in preventing
                                name collisions.
                              type: string
                            introspectionEndpointUri:
                              description: URI of the token introspection endpoint
                                which can be used to validate opaque non-JWT tokens.
                              type: string
                            jwksEndpointUri:
                              description: URI of the JWKS certificate endpoint, which
                                can be used for local JWT validation.
                              type: string
                            jwksExpirySeconds:
                              description: Configures how often are the JWKS certificates
                                considered valid. The expiry interval has to be at
                                least 60 seconds longer then the refresh interval
                                specified in `jwksRefreshSeconds`. Defaults to 360
                                seconds.
                              minimum: 1
                              type: integer
                            jwksRefreshSeconds:
                              description: Configures how often are the JWKS certificates
                                refreshed. The refresh interval has to be at least
                                60 seconds shorter then the expiry interval specified
                                in `jwksExpirySeconds`. Defaults to 300 seconds.
                              minimum: 1
                              type: integer
                            tlsTrustedCertificates:
                              description: Trusted certificates for TLS connection
                                to the OAuth server.
                              items:
                                properties:
                                  certificate:
                                    description: The name of the file certificate
                                      in the Secret.
                                    type: string
                                  secretName:
                                    description: The name of the Secret containing
                                      the certificate.
                                    type: string
                                required:
                                - certificate
                                - secretName
                                type: object
                              type: array
                            type:
                              description: Authentication type. `oauth` type uses
                                SASL OAUTHBEARER Authentication. `scram-sha-512` type
                                uses SASL SCRAM-SHA-512 Authentication. `tls` type
                                uses TLS Client Authentication. `tls` type is supported
                                only on TLS listeners.
                              enum:
                              - tls
                              - scram-sha-512
                              - oauth
                              type: string
                            userInfoEndpointUri:
                              description: 'URI of the User Info Endpoint to use as
                                a fallback to obtaining the user id when the Introspection
                                Endpoint does not return information that can be used
                                for the user id. '
                              type: string
                            userNameClaim:
                              description: Name of the claim from the JWT authentication
                                token, Introspection Endpoint response or User Info
                                Endpoint response which will be used to extract the
                                user id. Defaults to `sub`.
                              type: string
                            validIssuerUri:
                              description: URI of the token issuer used for authentication.
                              type: string
                            validTokenType:
                              description: Valid value for the `token_type` attribute
                                returned by the Introspection Endpoint. No default
                                value, and not checked by default.
                              type: string
                          required:
                          - type
                          type: object
                        configuration:
                          description: Configuration of TLS listener.
                          properties:
                            brokerCertChainAndKey:
                              description: Reference to the `Secret` which holds the
                                certificate and private key pair. The certificate
                                can optionally contain the whole chain.
                              properties:
                                certificate:
                                  description: The name of the file certificate in
                                    the Secret.
                                  type: string
                                key:
                                  description: The name of the private key in the
                                    Secret.
                                  type: string
                                secretName:
                                  description: The name of the Secret containing the
                                    certificate.
                                  type: string
                              required:
                              - certificate
                              - key
                              - secretName
                              type: object
                          type: object
                        networkPolicyPeers:
                          description: List of peers which should be able to connect
                            to this listener. Peers in this list are combined using
                            a logical OR operation. If this field is empty or missing,
                            all connections will be allowed for this listener. If
                            this field is present and contains at least one item,
                            the listener only allows the traffic which matches at
                            least one item in this list.
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr:
                                    type: string
                                  except:
                                    items:
                                      type: string
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for Kafka.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                    name:
                      description: The name of the `ConfigMap` from which to get the
                        logging configuration.
                      type: string
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                      - inline
                      - external
                      type: string
                  required:
                  - type
                  type: object
                metrics:
                  description: The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter
                    for details of the structure of this configuration.
                  type: object
                rack:
                  description: Configuration of the `broker.rack` broker config.
                  properties:
                    topologyKey:
                      description: A key that matches labels assigned to the Kubernetes
                        cluster nodes. The value of the label is used to set the broker's
                        `broker.rack` config.
                      example: topology.kubernetes.io/zone
                      type: string
                  required:
                  - topologyKey
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the cluster.
                  minimum: 1
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                storage:
                  description: Storage configuration (disk). Cannot be updated.
                  properties:
                    class:
                      description: The storage class to use for dynamic volume allocation.
                      type: string
                    deleteClaim:
                      description: Specifies if the persistent volume claim has to
                        be deleted when the cluster is un-deployed.
                      type: boolean
                    id:
                      description: Storage identification number. It is mandatory
                        only for storage volumes defined in a storage of type 'jbod'.
                      minimum: 0
                      type: integer
                    overrides:
                      description: Overrides for individual brokers. The `overrides`
                        field allows to specify a different configuration for different
                        brokers.
                      items:
                        properties:
                          broker:
                            description: Id of the kafka broker (broker identifier).
                            type: integer
                          class:
                            description: The storage class to use for dynamic volume
                              allocation for this broker.
                            type: string
                        type: object
                      type: array
                    selector:
                      description: Specifies a specific persistent volume to use.
                        It contains key:value pairs representing labels for selecting
                        such a volume.
                      type: object
                    size:
                      description: When type=persistent-claim, defines the size of
                        the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.
                      type: string
                    sizeLimit:
                      description: When type=ephemeral, defines the total amount of
                        local storage required for this EmptyDir volume (for example
                        1Gi).
                      pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                      type: string
                    type:
                      description: Storage type, must be either 'ephemeral', 'persistent-claim',
                        or 'jbod'.
                      enum:
                      - ephemeral
                      - persistent-claim
                      - jbod
                      type: string
                    volumes:
                      description: List of volumes as Storage objects representing
                        the JBOD disks array.
                      items:
                        properties:
                          class:
                            description: The storage class to use for dynamic volume
                              allocation.
                            type: string
                          deleteClaim:
                            description: Specifies if the persistent volume claim
                              has to be deleted when the cluster is un-deployed.
                            type: boolean
                          id:
                            description: Storage identification number. It is mandatory
                              only for storage volumes defined in a storage of type
                              'jbod'.
                            minimum: 0
                            type: integer
                          overrides:
                            description: Overrides for individual brokers. The `overrides`
                              field allows to specify a different configuration for
                              different brokers.
                            items:
                              properties:
                                broker:
                                  description: Id of the kafka broker (broker identifier).
                                  type: integer
                                class:
                                  description: The storage class to use for dynamic
                                    volume allocation for this broker.
                                  type: string
                              type: object
                            type: array
                          selector:
                            description: Specifies a specific persistent volume to
                              use. It contains key:value pairs representing labels
                              for selecting such a volume.
                            type: object
                          size:
                            description: When type=persistent-claim, defines the size
                              of the persistent volume claim (i.e 1Gi). Mandatory
                              when type=persistent-claim.
                            type: string
                          sizeLimit:
                            description: When type=ephemeral, defines the total amount
                              of local storage required for this EmptyDir volume (for
                              example 1Gi).
                            pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                            type: string
                          type:
                            description: Storage type, must be either 'ephemeral'
                              or 'persistent-claim'.
                            enum:
                            - ephemeral
                            - persistent-claim
                            type: string
                        required:
                        - type
                        type: object
                      type: array
                  required:
                  - type
                  type: object
                template:
                  description: Template for Kafka cluster resources. The template
                    allows users to specify how are the `StatefulSet`, `Pods` and
                    `Services` generated.
                  properties:
                    bootstrapService:
                      description: Template for Kafka bootstrap `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    brokersService:
                      description: Template for Kafka broker `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    externalBootstrapIngress:
                      description: Template for Kafka external bootstrap `Ingress`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    externalBootstrapRoute:
                      description: Template for Kafka external bootstrap `Route`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    externalBootstrapService:
                      description: Template for Kafka external bootstrap `Service`.
                      properties:
                        externalTrafficPolicy:
                          description: Specifies whether the service routes external
                            traffic to node-local or cluster-wide endpoints. `Cluster`
                            may cause a second hop to another node and obscures the
                            client source IP. `Local` avoids a second hop for LoadBalancer
                            and Nodeport type services and preserves the client source
                            IP (when supported by the infrastructure). If unspecified,
                            Kubernetes will use `Cluster` as the default.
                          enum:
                          - Local
                          - Cluster
                          type: string
                        loadBalancerSourceRanges:
                          description: A list of CIDR ranges (for example `10.0.0.0/8`
                            or `130.211.204.1/32`) from which clients can connect
                            to load balancer type listeners. If supported by the platform,
                            traffic through the loadbalancer is restricted to the
                            specified CIDR ranges. This field is applicable only for
                            loadbalancer type services and is ignored if the cloud
                            provider does not support the feature. For more information,
                            see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.
                          items:
                            type: string
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    initContainer:
                      description: Template for the Kafka init container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    kafkaContainer:
                      description: Template for the Kafka broker container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    perPodIngress:
                      description: Template for Kafka per-pod `Ingress` used for access
                        from outside of Kubernetes.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    perPodRoute:
                      description: Template for Kafka per-pod `Routes` used for access
                        from outside of OpenShift.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    perPodService:
                      description: Template for Kafka per-pod `Services` used for
                        access from outside of Kubernetes.
                      properties:
                        externalTrafficPolicy:
                          description: Specifies whether the service routes external
                            traffic to node-local or cluster-wide endpoints. `Cluster`
                            may cause a second hop to another node and obscures the
                            client source IP. `Local` avoids a second hop for LoadBalancer
                            and Nodeport type services and preserves the client source
                            IP (when supported by the infrastructure). If unspecified,
                            Kubernetes will use `Cluster` as the default.
                          enum:
                          - Local
                          - Cluster
                          type: string
                        loadBalancerSourceRanges:
                          description: A list of CIDR ranges (for example `10.0.0.0/8`
                            or `130.211.204.1/32`) from which clients can connect
                            to load balancer type listeners. If supported by the platform,
                            traffic through the loadbalancer is restricted to the
                            specified CIDR ranges. This field is applicable only for
                            loadbalancer type services and is ignored if the cloud
                            provider does not support the feature. For more information,
                            see https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/.
                          items:
                            type: string
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    persistentVolumeClaim:
                      description: Template for all Kafka `PersistentVolumeClaims`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for Kafka `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow
                            automatic Pod eviction. A Pod eviction is allowed when
                            the `maxUnavailable` number of pods or fewer are unavailable
                            after the eviction. Setting this value to 0 prevents all
                            voluntary evictions, so the pods must be evicted manually.
                            Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDistruptionBugetTemplate`
                            resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    statefulset:
                      description: Template for Kafka `StatefulSet`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        podManagementPolicy:
                          description: PodManagementPolicy which will be used for
                            this StatefulSet. Valid values are `Parallel` and `OrderedReady`.
                            Defaults to `Parallel`.
                          enum:
                          - OrderedReady
                          - Parallel
                          type: string
                      type: object
                    tlsSidecarContainer:
                      description: Template for the Kafka broker TLS sidecar container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar configuration.
                  properties:
                    image:
                      description: The docker image for the container.
                      type: string
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logLevel:
                      description: The log level for the TLS sidecar. Default value
                        is `notice`.
                      enum:
                      - emerg
                      - alert
                      - crit
                      - err
                      - warning
                      - notice
                      - info
                      - debug
                      type: string
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                  type: object
                tolerations:
                  description: The pod's tolerations.
                  items:
                    properties:
                      effect:
                        type: string
                      key:
                        type: string
                      operator:
                        type: string
                      tolerationSeconds:
                        type: integer
                      value:
                        type: string
                    type: object
                  type: array
                version:
                  description: The kafka broker version. Defaults to {DefaultKafkaVersion}.
                    Consult the user documentation to understand the process required
                    to upgrade or downgrade the version.
                  type: string
              required:
              - replicas
              - storage
              - listeners
              type: object
            kafkaExporter:
              description: Configuration of the Kafka Exporter. Kafka Exporter can
                provide additional metrics, for example lag of consumer group at topic/partition.
              properties:
                enableSaramaLogging:
                  description: Enable Sarama logging, a Go client library used by
                    the Kafka Exporter.
                  type: boolean
                groupRegex:
                  description: Regular expression to specify which consumer groups
                    to collect. Default value is `.*`.
                  type: string
                image:
                  description: The docker image for the pods.
                  type: string
                livenessProbe:
                  description: Pod liveness check.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                logging:
                  description: 'Only log messages with the given severity or above.
                    Valid levels: [`debug`, `info`, `warn`, `error`, `fatal`]. Default
                    log level is `info`.'
                  type: string
                readinessProbe:
                  description: Pod readiness check.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                template:
                  description: Customization of deployment templates and pods.
                  properties:
                    container:
                      description: Template for the Kafka Exporter container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Template for Kafka Exporter `Deployment`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for Kafka Exporter `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    service:
                      description: Template for Kafka Exporter `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                  type: object
                topicRegex:
                  description: Regular expression to specify which topics to collect.
                    Default value is `.*`.
                  type: string
              type: object
            maintenanceTimeWindows:
              description: A list of time windows for maintenance tasks (that is,
                certificates renewal). Each time window is defined by a cron expression.
              items:
                type: string
              type: array
            topicOperator:
              description: Configuration of the Topic Operator.
              properties:
                affinity:
                  description: Pod affinity rules.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                image:
                  description: The image to use for the Topic Operator.
                  type: string
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging
                        is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will
                        be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                logging:
                  description: Logging configuration.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                    name:
                      description: The name of the `ConfigMap` from which to get the
                        logging configuration.
                      type: string
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                      - inline
                      - external
                      type: string
                  required:
                  - type
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                reconciliationIntervalSeconds:
                  description: Interval between periodic reconciliations.
                  minimum: 0
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar configuration.
                  properties:
                    image:
                      description: The docker image for the container.
                      type: string
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logLevel:
                      description: The log level for the TLS sidecar. Default value
                        is `notice`.
                      enum:
                      - emerg
                      - alert
                      - crit
                      - err
                      - warning
                      - notice
                      - info
                      - debug
                      type: string
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                  type: object
                topicMetadataMaxAttempts:
                  description: The number of attempts at getting topic metadata.
                  minimum: 0
                  type: integer
                watchedNamespace:
                  description: The namespace the Topic Operator should watch.
                  type: string
                zookeeperSessionTimeoutSeconds:
                  description: Timeout for the ZooKeeper session.
                  minimum: 0
                  type: integer
              type: object
            zookeeper:
              description: Configuration of the ZooKeeper cluster.
              properties:
                affinity:
                  description: The pod's affinity rules.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key:
                                              type: string
                                            operator:
                                              type: string
                                            values:
                                              items:
                                                type: string
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels:
                                        type: object
                                    type: object
                                  namespaces:
                                    items:
                                      type: string
                                    type: array
                                  topologyKey:
                                    type: string
                                type: object
                              weight:
                                type: integer
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key:
                                          type: string
                                        operator:
                                          type: string
                                        values:
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels:
                                    type: object
                                type: object
                              namespaces:
                                items:
                                  type: string
                                type: array
                              topologyKey:
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                config:
                  description: 'The ZooKeeper broker config. Properties with the following
                    prefixes cannot be set: server., dataDir, dataLogDir, clientPort,
                    authProvider, quorum.auth, requireClientAuthScheme, snapshot.trust.empty,
                    standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist, secureClientPort,
                    ssl., serverCnxnFactory, sslQuorum (with the exception of: ssl.protocol,
                    ssl.quorum.protocol, ssl.enabledProtocols, ssl.quorum.enabledProtocols,
                    ssl.ciphersuites, ssl.quorum.ciphersuites, ssl.hostnameVerification,
                    ssl.quorum.hostnameVerification).'
                  type: object
                image:
                  description: The docker image for the pods.
                  type: string
                jvmOptions:
                  description: JVM Options for pods.
                  properties:
                    -XX:
                      description: A map of -XX options to the JVM.
                      type: object
                    -Xms:
                      description: -Xms option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    -Xmx:
                      description: -Xmx option to to the JVM.
                      pattern: '[0-9]+[mMgG]?'
                      type: string
                    gcLoggingEnabled:
                      description: Specifies whether the Garbage Collection logging
                        is enabled. The default is false.
                      type: boolean
                    javaSystemProperties:
                      description: A map of additional system properties which will
                        be passed using the `-D` option to the JVM.
                      items:
                        properties:
                          name:
                            description: The system property name.
                            type: string
                          value:
                            description: The system property value.
                            type: string
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: Pod liveness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                logging:
                  description: Logging configuration for ZooKeeper.
                  properties:
                    loggers:
                      description: A Map from logger name to logger level.
                      type: object
                    name:
                      description: The name of the `ConfigMap` from which to get the
                        logging configuration.
                      type: string
                    type:
                      description: Logging type, must be either 'inline' or 'external'.
                      enum:
                      - inline
                      - external
                      type: string
                  required:
                  - type
                  type: object
                metrics:
                  description: The Prometheus JMX Exporter configuration. See https://github.com/prometheus/jmx_exporter
                    for details of the structure of this configuration.
                  type: object
                readinessProbe:
                  description: Pod readiness checking.
                  properties:
                    failureThreshold:
                      description: Minimum consecutive failures for the probe to be
                        considered failed after having succeeded. Defaults to 3. Minimum
                        value is 1.
                      type: integer
                    initialDelaySeconds:
                      description: The initial delay before first the health is first
                        checked.
                      minimum: 0
                      type: integer
                    periodSeconds:
                      description: How often (in seconds) to perform the probe. Default
                        to 10 seconds. Minimum value is 1.
                      type: integer
                    successThreshold:
                      description: Minimum consecutive successes for the probe to
                        be considered successful after having failed. Defaults to
                        1. Must be 1 for liveness. Minimum value is 1.
                      type: integer
                    timeoutSeconds:
                      description: The timeout for each attempted health check.
                      minimum: 0
                      type: integer
                  type: object
                replicas:
                  description: The number of pods in the cluster.
                  minimum: 1
                  type: integer
                resources:
                  description: CPU and memory resources to reserve.
                  properties:
                    limits:
                      type: object
                    requests:
                      type: object
                  type: object
                storage:
                  description: Storage configuration (disk). Cannot be updated.
                  properties:
                    class:
                      description: The storage class to use for dynamic volume allocation.
                      type: string
                    deleteClaim:
                      description: Specifies if the persistent volume claim has to
                        be deleted when the cluster is un-deployed.
                      type: boolean
                    id:
                      description: Storage identification number. It is mandatory
                        only for storage volumes defined in a storage of type 'jbod'.
                      minimum: 0
                      type: integer
                    overrides:
                      description: Overrides for individual brokers. The `overrides`
                        field allows to specify a different configuration for different
                        brokers.
                      items:
                        properties:
                          broker:
                            description: Id of the kafka broker (broker identifier).
                            type: integer
                          class:
                            description: The storage class to use for dynamic volume
                              allocation for this broker.
                            type: string
                        type: object
                      type: array
                    selector:
                      description: Specifies a specific persistent volume to use.
                        It contains key:value pairs representing labels for selecting
                        such a volume.
                      type: object
                    size:
                      description: When type=persistent-claim, defines the size of
                        the persistent volume claim (i.e 1Gi). Mandatory when type=persistent-claim.
                      type: string
                    sizeLimit:
                      description: When type=ephemeral, defines the total amount of
                        local storage required for this EmptyDir volume (for example
                        1Gi).
                      pattern: ^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$
                      type: string
                    type:
                      description: Storage type, must be either 'ephemeral' or 'persistent-claim'.
                      enum:
                      - ephemeral
                      - persistent-claim
                      type: string
                  required:
                  - type
                  type: object
                template:
                  description: Template for ZooKeeper cluster resources. The template
                    allows users to specify how are the `StatefulSet`, `Pods` and
                    `Services` generated.
                  properties:
                    clientService:
                      description: Template for ZooKeeper client `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    nodesService:
                      description: Template for ZooKeeper nodes `Service`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    persistentVolumeClaim:
                      description: Template for all ZooKeeper `PersistentVolumeClaims`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    pod:
                      description: Template for ZooKeeper `Pods`.
                      properties:
                        affinity:
                          description: The pod's affinity rules.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key:
                                                      type: string
                                                    operator:
                                                      type: string
                                                    values:
                                                      items:
                                                        type: string
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels:
                                                type: object
                                            type: object
                                          namespaces:
                                            items:
                                              type: string
                                            type: array
                                          topologyKey:
                                            type: string
                                        type: object
                                      weight:
                                        type: integer
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key:
                                                  type: string
                                                operator:
                                                  type: string
                                                values:
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels:
                                            type: object
                                        type: object
                                      namespaces:
                                        items:
                                          type: string
                                        type: array
                                      topologyKey:
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: List of references to secrets in the same namespace
                            to use for pulling any of the images used by this Pod.
                            When the `STRIMZI_IMAGE_PULL_SECRETS` environment variable
                            in Cluster Operator and the `imagePullSecrets` option
                            are specified, only the `imagePullSecrets` variable is
                            used and the `STRIMZI_IMAGE_PULL_SECRETS` variable is
                            ignored.
                          items:
                            properties:
                              name:
                                type: string
                            type: object
                          type: array
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        priorityClassName:
                          description: The name of the priority class used to assign
                            priority to the pods. For more information about priority
                            classes, see {K8sPriorityClass}.
                          type: string
                        schedulerName:
                          description: The name of the scheduler used to dispatch
                            this `Pod`. If not specified, the default scheduler will
                            be used.
                          type: string
                        securityContext:
                          description: Configures pod-level security attributes and
                            common container settings.
                          properties:
                            fsGroup:
                              type: integer
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            supplementalGroups:
                              items:
                                type: integer
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                        terminationGracePeriodSeconds:
                          description: The grace period is the duration in seconds
                            after the processes running in the pod are sent a termination
                            signal, and the time when the processes are forcibly halted
                            with a kill signal. Set this value to longer than the
                            expected cleanup time for your process. Value must be
                            a non-negative integer. A zero value indicates delete
                            immediately. You might need to increase the grace period
                            for very large Kafka clusters, so that the Kafka brokers
                            have enough time to transfer their work to another broker
                            before they are terminated. Defaults to 30 seconds.
                          minimum: 0
                          type: integer
                        tolerations:
                          description: The pod's tolerations.
                          items:
                            properties:
                              effect:
                                type: string
                              key:
                                type: string
                              operator:
                                type: string
                              tolerationSeconds:
                                type: integer
                              value:
                                type: string
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for ZooKeeper `PodDisruptionBudget`.
                      properties:
                        maxUnavailable:
                          description: Maximum number of unavailable pods to allow
                            automatic Pod eviction. A Pod eviction is allowed when
                            the `maxUnavailable` number of pods or fewer are unavailable
                            after the eviction. Setting this value to 0 prevents all
                            voluntary evictions, so the pods must be evicted manually.
                            Defaults to 1.
                          minimum: 0
                          type: integer
                        metadata:
                          description: Metadata to apply to the `PodDistruptionBugetTemplate`
                            resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                      type: object
                    statefulset:
                      description: Template for ZooKeeper `StatefulSet`.
                      properties:
                        metadata:
                          description: Metadata applied to the resource.
                          properties:
                            annotations:
                              description: Annotations added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                            labels:
                              description: Labels added to the resource template.
                                Can be applied to different resources such as `StatefulSets`,
                                `Deployments`, `Pods`, and `Services`.
                              type: object
                          type: object
                        podManagementPolicy:
                          description: PodManagementPolicy which will be used for
                            this StatefulSet. Valid values are `Parallel` and `OrderedReady`.
                            Defaults to `Parallel`.
                          enum:
                          - OrderedReady
                          - Parallel
                          type: string
                      type: object
                    tlsSidecarContainer:
                      description: Template for the Zookeeper server TLS sidecar container.
                        The TLS sidecar is not used anymore and this option will be
                        ignored.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                    zookeeperContainer:
                      description: Template for the ZooKeeper container.
                      properties:
                        env:
                          description: Environment variables which should be applied
                            to the container.
                          items:
                            properties:
                              name:
                                description: The environment variable key.
                                type: string
                              value:
                                description: The environment variable value.
                                type: string
                            type: object
                          type: array
                        securityContext:
                          description: Security context for the container.
                          properties:
                            allowPrivilegeEscalation:
                              type: boolean
                            capabilities:
                              properties:
                                add:
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  items:
                                    type: string
                                  type: array
                              type: object
                            privileged:
                              type: boolean
                            procMount:
                              type: string
                            readOnlyRootFilesystem:
                              type: boolean
                            runAsGroup:
                              type: integer
                            runAsNonRoot:
                              type: boolean
                            runAsUser:
                              type: integer
                            seLinuxOptions:
                              properties:
                                level:
                                  type: string
                                role:
                                  type: string
                                type:
                                  type: string
                                user:
                                  type: string
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec:
                                  type: string
                                gmsaCredentialSpecName:
                                  type: string
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar configuration. The TLS sidecar is not used
                    anymore and this option will be ignored.
                  properties:
                    image:
                      description: The docker image for the container.
                      type: string
                    livenessProbe:
                      description: Pod liveness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    logLevel:
                      description: The log level for the TLS sidecar. Default value
                        is `notice`.
                      enum:
                      - emerg
                      - alert
                      - crit
                      - err
                      - warning
                      - notice
                      - info
                      - debug
                      type: string
                    readinessProbe:
                      description: Pod readiness checking.
                      properties:
                        failureThreshold:
                          description: Minimum consecutive failures for the probe
                            to be considered failed after having succeeded. Defaults
                            to 3. Minimum value is 1.
                          type: integer
                        initialDelaySeconds:
                          description: The initial delay before first the health is
                            first checked.
                          minimum: 0
                          type: integer
                        periodSeconds:
                          description: How often (in seconds) to perform the probe.
                            Default to 10 seconds. Minimum value is 1.
                          type: integer
                        successThreshold:
                          description: Minimum consecutive successes for the probe
                            to be considered successful after having failed. Defaults
                            to 1. Must be 1 for liveness. Minimum value is 1.
                          type: integer
                        timeoutSeconds:
                          description: The timeout for each attempted health check.
                          minimum: 0
                          type: integer
                      type: object
                    resources:
                      description: CPU and memory resources to reserve.
                      properties:
                        limits:
                          type: object
                        requests:
                          type: object
                      type: object
                  type: object
                tolerations:
                  description: The pod's tolerations.
                  items:
                    properties:
                      effect:
                        type: string
                      key:
                        type: string
                      operator:
                        type: string
                      tolerationSeconds:
                        type: integer
                      value:
                        type: string
                    type: object
                  type: array
              required:
              - replicas
              - storage
              type: object
          required:
          - kafka
          - zookeeper
          type: object
        status:
          description: The status of the Kafka and ZooKeeper clusters, and Topic Operator.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            listeners:
              description: Addresses of the internal and external listeners.
              items:
                properties:
                  addresses:
                    description: A list of the addresses for this listener.
                    items:
                      properties:
                        host:
                          description: The DNS name or IP address of the Kafka bootstrap
                            service.
                          type: string
                        port:
                          description: The port of the Kafka bootstrap service.
                          type: integer
                      type: object
                    type: array
                  bootstrapServers:
                    description: A comma-separated list of `host:port` pairs for connecting
                      to the Kafka cluster using this listener.
                    type: string
                  certificates:
                    description: A list of TLS certificates which can be used to verify
                      the identity of the server when connecting to the given listener.
                      Set only for `tls` and `external` listeners.
                    items:
                      type: string
                    type: array
                  type:
                    description: 'The type of the listener. Can be one of the following
                      three types: `plain`, `tls`, and `external`.'
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkatopics.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.partitions
    description: The desired number of partitions in the topic
    name: Partitions
    type: integer
  - JSONPath: .spec.replicas
    description: The desired number of replicas of each partition
    name: Replication factor
    type: integer
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaTopic
    listKind: KafkaTopicList
    plural: kafkatopics
    shortNames:
    - kt
    singular: kafkatopic
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the topic.
          properties:
            config:
              description: The topic configuration.
              type: object
            partitions:
              description: The number of partitions the topic should have. This cannot
                be decreased after topic creation. It can be increased after topic
                creation, but it is important to understand the consequences that
                has, especially for topics with semantic partitioning.
              minimum: 1
              type: integer
            replicas:
              description: The number of replicas the topic should have.
              maximum: 32767
              minimum: 1
              type: integer
            topicName:
              description: The name of the topic. When absent this will default to
                the metadata.name of the topic. It is recommended to not set this
                unless the topic name is not a valid Kubernetes resource name.
              type: string
          required:
          - partitions
          - replicas
          type: object
        status:
          description: The status of the topic.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels:
    app: strimzi
    strimzi.io/crd-install: "true"
  name: kafkausers.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.authentication.type
    description: How the user is authenticated
    name: Authentication
    type: string
  - JSONPath: .spec.authorization.type
    description: How the user is authorised
    name: Authorization
    type: string
  group: kafka.strimzi.io
  names:
    categories:
    - strimzi
    kind: KafkaUser
    listKind: KafkaUserList
    plural: kafkausers
    shortNames:
    - ku
    singular: kafkauser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the user.
          properties:
            authentication:
              description: Authentication mechanism enabled for this Kafka user.
              properties:
                type:
                  description: Authentication type.
                  enum:
                  - tls
                  - scram-sha-512
                  type: string
              required:
              - type
              type: object
            authorization:
              description: Authorization rules for this Kafka user.
              properties:
                acls:
                  description: List of ACL rules which should be applied to this user.
                  items:
                    properties:
                      host:
                        description: The host from which the action described in the
                          ACL rule is allowed or denied.
                        type: string
                      operation:
                        description: 'Operation which will be allowed or denied. Supported
                          operations are: Read, Write, Create, Delete, Alter, Describe,
                          ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite
                          and All.'
                        enum:
                        - Read
                        - Write
                        - Create
                        - Delete
                        - Alter
                        - Describe
                        - ClusterAction
                        - AlterConfigs
                        - DescribeConfigs
                        - IdempotentWrite
                        - All
                        type: string
                      resource:
                        description: Indicates the resource for which given ACL rule
                          applies.
                        properties:
                          name:
                            description: Name of resource for which given ACL rule
                              applies. Can be combined with `patternType` field to
                              use prefix pattern.
                            type: string
                          patternType:
                            description: Describes the pattern used in the resource
                              field. The supported types are `literal` and `prefix`.
                              With `literal` pattern type, the resource field will
                              be used as a definition of a full name. With `prefix`
                              pattern type, the resource name will be used only as
                              a prefix. Default value is `literal`.
                            enum:
                            - literal
                            - prefix
                            type: string
                          type:
                            description: Resource type. The available resource types
                              are `topic`, `group`, `cluster`, and `transactionalId`.
                            enum:
                            - topic
                            - group
                            - cluster
                            - transactionalId
                            type: string
                        required:
                        - type
                        type: object
                      type:
                        description: The type of the rule. Currently the only supported
                          type is `allow`. ACL rules with type `allow` are used to
                          allow user to execute the specified operations. Default
                          value is `allow`.
                        enum:
                        - allow
                        - deny
                        type: string
                    required:
                    - operation
                    - resource
                    type: object
                  type: array
                type:
                  description: Authorization type. Currently the only supported type
                    is `simple`. `simple` authorization type uses Kafka's `kafka.security.auth.SimpleAclAuthorizer`
                    class for authorization.
                  enum:
                  - simple
                  type: string
              required:
              - acls
              - type
              type: object
            quotas:
              description: Quotas on requests to control the broker resources used
                by clients. Network bandwidth and request rate quotas can be enforced.Kafka
                documentation for Kafka User quotas can be found at http://kafka.apache.org/documentation/#design_quotas.
              properties:
                consumerByteRate:
                  description: A quota on the maximum bytes per-second that each client
                    group can fetch from a broker before the clients in the group
                    are throttled. Defined on a per-broker basis.
                  minimum: 0
                  type: integer
                producerByteRate:
                  description: A quota on the maximum bytes per-second that each client
                    group can publish to a broker before the clients in the group
                    are throttled. Defined on a per-broker basis.
                  minimum: 0
                  type: integer
                requestPercentage:
                  description: A quota on the maximum CPU utilization of each client
                    group as a percentage of network and I/O threads.
                  minimum: 0
                  type: integer
              type: object
            template:
              description: Template to specify how Kafka User `Secrets` are generated.
              properties:
                secret:
                  description: Template for KafkaUser resources. The template allows
                    users to specify how the `Secret` with password or TLS certificates
                    is generated.
                  properties:
                    metadata:
                      description: Metadata applied to the resource.
                      properties:
                        annotations:
                          description: Annotations added to the resource template.
                            Can be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                        labels:
                          description: Labels added to the resource template. Can
                            be applied to different resources such as `StatefulSets`,
                            `Deployments`, `Pods`, and `Services`.
                          type: object
                      type: object
                  type: object
              type: object
          type: object
        status:
          description: The status of the Kafka User.
          properties:
            conditions:
              description: List of status conditions.
              items:
                properties:
                  lastTransitionTime:
                    description: Last time the condition of a type changed from one
                      status to another. The required format is 'yyyy-MM-ddTHH:mm:ssZ',
                      in the UTC time zone.
                    type: string
                  message:
                    description: Human-readable message indicating details about the
                      condition's last transition.
                    type: string
                  reason:
                    description: The reason for the condition's last transition (a
                      single word in CamelCase).
                    type: string
                  status:
                    description: The status of the condition, either True, False or
                      Unknown.
                    type: string
                  type:
                    description: The unique identifier of a condition, used to distinguish
                      between other conditions in the resource.
                    type: string
                type: object
              type: array
            observedGeneration:
              description: The generation of the CRD that was last reconciled by the
                operator.
              type: integer
            secret:
              description: The name of `Secret` where the credentials are stored.
              type: string
            username:
              description: Username.
              type: string
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-global
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - get
  - create
  - delete
  - patch
  - update
  - watch
- apiGroups:
  - storage.k8s.io
  resources:
  - storageclasses
  verbs:
  - get
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-namespaced
rules:
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - get
  - create
  - delete
  - patch
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - get
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  - services
  - secrets
  - persistentvolumeclaims
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkas
  - kafkas/status
  - kafkaconnects
  - kafkaconnects/status
  - kafkaconnects2is
  - kafkaconnects2is/status
  - kafkaconnectors
  - kafkaconnectors/status
  - kafkamirrormakers
  - kafkamirrormakers/status
  - kafkabridges
  - kafkabridges/status
  - kafkamirrormaker2s
  - kafkamirrormaker2s/status
  - kafkarebalances
  - kafkarebalances/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - deployments
  - deployments/scale
  - replicasets
  - replicationcontrollers
  - networkpolicies
  - ingresses
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  - deployments/scale
  - deployments/status
  - statefulsets
  - replicasets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - apps.openshift.io
  resources:
  - deploymentconfigs
  - deploymentconfigs/scale
  - deploymentconfigs/status
  - deploymentconfigs/finalizers
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - build.openshift.io
  resources:
  - buildconfigs
  - builds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - watch
  - update
- apiGroups:
  - image.openshift.io
  resources:
  - imagestreams
  - imagestreams/status
  verbs:
  - create
  - delete
  - get
  - list
  - watch
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  - routes/custom-host
  verbs:
  - get
  - list
  - create
  - delete
  - patch
  - update
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-entity-operator
rules:
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkatopics
  - kafkatopics/status
  - kafkausers
  - kafkausers/status
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - create
  - patch
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-kafka-broker
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app: strimzi
  name: strimzi-topic-operator
rules:
- apiGroups:
  - kafka.strimzi.io
  resources:
  - kafkatopics
  verbs:
  - get
  - list
  - watch
  - create
  - patch
  - update
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-namespaced
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-entity-operator-delegation
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-entity-operator
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-topic-operator-delegation
  namespace: kafka
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-topic-operator
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-cluster-operator-global
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator-kafka-broker-delegation
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: strimzi-kafka-broker
subjects:
- kind: ServiceAccount
  name: strimzi-cluster-operator
  namespace: kafka
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: strimzi
  name: strimzi-cluster-operator
  namespace: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      name: strimzi-cluster-operator
      strimzi.io/kind: cluster-operator
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: strimzi-cluster-operator
        strimzi.io/kind: cluster-operator
    spec:
      containers:
      - args:
        - /opt/strimzi/bin/cluster_operator_run.sh
        env:
        - name: STRIMZI_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
          value: "120000"
        - name: STRIMZI_OPERATION_TIMEOUT_MS
          value: "300000"
        - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
          value: strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_DEFAULT_TLS_SIDECAR_KAFKA_IMAGE
          value: strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_DEFAULT_KAFKA_EXPORTER_IMAGE
          value: strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_DEFAULT_CRUISE_CONTROL_IMAGE
          value: strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_DEFAULT_TLS_SIDECAR_CRUISE_CONTROL_IMAGE
          value: strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_KAFKA_IMAGES
          value: |
            2.4.0=strimzi/kafka:0.19.0-kafka-2.4.0
            2.4.1=strimzi/kafka:0.19.0-kafka-2.4.1
            2.5.0=strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_KAFKA_CONNECT_IMAGES
          value: |
            2.4.0=strimzi/kafka:0.19.0-kafka-2.4.0
            2.4.1=strimzi/kafka:0.19.0-kafka-2.4.1
            2.5.0=strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_KAFKA_CONNECT_S2I_IMAGES
          value: |
            2.4.0=strimzi/kafka:0.19.0-kafka-2.4.0
            2.4.1=strimzi/kafka:0.19.0-kafka-2.4.1
            2.5.0=strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_KAFKA_MIRROR_MAKER_IMAGES
          value: |
            2.4.0=strimzi/kafka:0.19.0-kafka-2.4.0
            2.4.1=strimzi/kafka:0.19.0-kafka-2.4.1
            2.5.0=strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_KAFKA_MIRROR_MAKER_2_IMAGES
          value: |
            2.4.0=strimzi/kafka:0.19.0-kafka-2.4.0
            2.4.1=strimzi/kafka:0.19.0-kafka-2.4.1
            2.5.0=strimzi/kafka:0.19.0-kafka-2.5.0
        - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
          value: strimzi/operator:0.19.0
        - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
          value: strimzi/operator:0.19.0
        - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
          value: strimzi/operator:0.19.0
        - name: STRIMZI_DEFAULT_KAFKA_BRIDGE_IMAGE
          value: strimzi/kafka-bridge:0.18.0
        - name: STRIMZI_DEFAULT_JMXTRANS_IMAGE
          value: strimzi/jmxtrans:0.19.0
        - name: STRIMZI_LOG_LEVEL
          value: INFO
        image: strimzi/operator:0.19.0
        livenessProbe:
          httpGet:
            path: /healthy
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        name: strimzi-cluster-operator
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /ready
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
        resources:
          limits:
            cpu: 1000m
            memory: 384Mi
          requests:
            cpu: 200m
            memory: 384Mi
      serviceAccountName: strimzi-cluster-operator
---
apiVersion: kafka.strimzi.io/v1beta1
kind: Kafka
metadata:
  name: cluster
  namespace: kafka
spec:
  entityOperator:
    topicOperator: {}
    userOperator: {}
  kafka:
    config:
      auto.create.topics.enable: false
      log.message.format.version: "2.5"
      offsets.topic.replication.factor: 3
      transaction.state.log.min.isr: 2
      transaction.state.log.replication.factor: 3
    listeners:
      tls: {}
    replicas: 3
    storage:
      type: jbod
      volumes:
      - deleteClaim: false
        id: 0
        size: 15Gi
        type: persistent-claim
    version: 2.5.0
  zookeeper:
    replicas: 3
    storage:
      deleteClaim: false
      size: 15Gi
      type: persistent-claim
